/***
 *
 *  ##     ##    ###    ########  ##    ## ##          ###    ##    ## ########  
 *  ###   ###   ## ##   ##     ##  ##  ##  ##         ## ##   ###   ## ##     ## 
 *  #### ####  ##   ##  ##     ##   ####   ##        ##   ##  ####  ## ##     ## 
 *  ## ### ## ##     ## ########     ##    ##       ##     ## ## ## ## ##     ## 
 *  ##     ## ######### ##   ##      ##    ##       ######### ##  #### ##     ## 
 *  ##     ## ##     ## ##    ##     ##    ##       ##     ## ##   ### ##     ## 
 *  ##     ## ##     ## ##     ##    ##    ######## ##     ## ##    ## ########   
 *
 *  @Author         Vostic & Ogy_
 *  @Date           05th May 2023
 *  @Weburl         https://maryland-ogc.com
 *  @Project        maryland_project
 *
 *  @File           db.stock
 *  @Module         stocks
 */

#include <ysilib\YSI_Coding\y_hooks>

hook OnGameModeInit()
{
	print("stocks/db.stock loaded");

	return 1;
}
udb_hash(const buf[]) {
    new length=strlen(buf);
    new s1 = 1;
    new s2 = 0;
    new n;
    for (n=0; n<length; n++)
    {
       s1 = (s1 + buf[n]) % 65521;
       s2 = (s2 + s1)     % 65521;
    }
    return (s2 << 16) + s1;
}
stock formatInt(intVariable, iThousandSeparator = ',', iCurrencyChar = '$')
{
    /*
        By Kar
        https://gist.github.com/Kar2k/bfb0eafb2caf71a1237b349684e091b9/8849dad7baa863afb1048f40badd103567c005a5#file-formatint-function
    */
    static
        s_szReturn[ 32 ],
        s_szThousandSeparator[ 2 ] = { ' ', EOS },
        s_szCurrencyChar[ 2 ] = { ' ', EOS },
        s_iVariableLen,
        s_iChar,
        s_iSepPos,
        bool:s_isNegative
    ;

    format( s_szReturn, sizeof( s_szReturn ), "%d", intVariable );

    if(s_szReturn[0] == '-')
        s_isNegative = true;
    else
        s_isNegative = false;

    s_iVariableLen = strlen( s_szReturn );

    if ( s_iVariableLen >= 4 && iThousandSeparator)
    {
        s_szThousandSeparator[ 0 ] = iThousandSeparator;

        s_iChar = s_iVariableLen;
        s_iSepPos = 0;

        while ( --s_iChar > _:s_isNegative )
        {
            if ( ++s_iSepPos == 3 )
            {
                strins( s_szReturn, s_szThousandSeparator, s_iChar );

                s_iSepPos = 0;
            }
        }
    }
    if(iCurrencyChar) {
        s_szCurrencyChar[ 0 ] = iCurrencyChar;
        strins( s_szReturn, s_szCurrencyChar, _:s_isNegative );
    }
    return s_szReturn;
}
//* Cuvanje naloga na Registeru
stock SavePlayer(playerid)
{
    if(IgracUlogovan[playerid] == true)
    {
        new query[500];
		mysql_format(SQL,query,sizeof(query),"UPDATE `players` SET `Level` = '%d',`Novac` = '%d',`Skin` = '%d',`Godine` = '%d', `Staff` = '%d', `Objekat0` = '%d', `Objekat1` = '%d', `LastLogin` = '%e' WHERE `ID` = '%d'",
			PlayerInfo[playerid][Level],
			GetPlayerMoney(playerid),
			PlayerInfo[playerid][Skin],
			PlayerInfo[playerid][Godine],
            PlayerInfo[playerid][Staff],
            PlayerInfo[playerid][AttachedObject][0],
            PlayerInfo[playerid][AttachedObject][1],
            ReturnDate(),
			PlayerInfo[playerid][SQLID]);
		mysql_tquery(SQL,query);        
    }

    return true;
}
//* Save sve u vezi dokumenata
stock SaveDocuments(playerid)
{
    if(IgracUlogovan[playerid] == true)
    {
        new query[500];
        mysql_format(SQL,query,sizeof(query),"UPDATE `player_documents` SET `NationalID` = '%d',`Passport` = '%d',`VoziloLicence` = '%d',`MotoLicence` = '%d', `BrodLicence` = '%d', `OruzjeLicence` = '%d' WHERE `player_id` = '%d'",
            PlayerDocuments[playerid][pNationalID],
            PlayerDocuments[playerid][pPassport],
            PlayerDocuments[playerid][pDriveLicence],
            PlayerDocuments[playerid][pMotoLicence],
            PlayerDocuments[playerid][pBoatLicence],
            PlayerDocuments[playerid][pGunLicence],
            PlayerInfo[playerid][SQLID]);
        mysql_tquery(SQL,query);      
    }

    return true;
}
//* Save sve u vezi elektronike
stock SaveElectronic(playerid)
{
    if(IgracUlogovan[playerid] == true)
    {
        new query[500];
        mysql_format(SQL,query,sizeof(query),"UPDATE `player_electronic` SET `Dron` = '%d',`Baterije` = '%d',`Navigacija` = '%d' WHERE `player_id` = '%d'",
            PlayerElectronic[playerid][eDronItem],
            PlayerElectronic[playerid][eBaterijaItem],
            PlayerElectronic[playerid][eNavigacijaItem],
            PlayerInfo[playerid][SQLID]);
        mysql_tquery(SQL,query);      
    }

    return true;
}
//* Save sve u vezi finansija
stock SaveFinance(playerid)
{

    if(IgracUlogovan[playerid] == true)
    {
        new query[500];
        mysql_format(SQL,query,sizeof(query),"UPDATE `player_finance` SET `BankAccount` = '%d',`BankMoney` = '%d',`BankPin` = '%d' WHERE `finance_id` = '%d'",
            PlayerFinance[playerid][pBankAccount],
            PlayerFinance[playerid][pBankMoney],
            PlayerFinance[playerid][pBankPin],
            PlayerInfo[playerid][SQLID]);
        mysql_tquery(SQL,query);      
    }

    return true;
}

//* Save sve u vezi property
stock SavePropForPlayer(playerid)
{
    if(IgracUlogovan[playerid] == true)
    {
        new query[500];
        mysql_format(SQL,query,sizeof(query),"UPDATE `player_property` SET `BCenter` = '%d', `HouseID` = '%d' WHERE `player_id` = '%d'",
            PlayerProperty[playerid][BCenter]
            player_House[playerid],
            PlayerInfo[playerid][SQLID]);
        mysql_tquery(SQL,query);      
    }

    return true;
}


stock SaveCryptoPlayer(playerid)
{
    if(IgracUlogovan[playerid] == true)
    {
        new query[500];
        mysql_format(SQL,query,sizeof(query),"UPDATE `player_crypto` SET `KolicinaBTC` = '%f',`KolicinaETH` = '%f',`KolicinaDOT` = '%f',`KolicinaUSDT` = '%f', `KolicinaLTC` = '%f' WHERE `crypto_id` = '%d'",
            PlayerCrypto[playerid][countBTC],
            PlayerCrypto[playerid][countXRP],
            PlayerCrypto[playerid][countDOT],
            PlayerCrypto[playerid][countUSDT],
            PlayerCrypto[playerid][countLTC],
            PlayerInfo[playerid][SQLID]);
        mysql_tquery(SQL,query);        
    }

    return true;
}
//* Vraca datum
ReturnDate()
{
    static
        date[36];

    getdate(date[2], date[1], date[0]);
    gettime(date[3], date[4], date[5]);

    format(date, sizeof(date), "%02d/%02d/%d - %02d:%02d", date[0], date[1], date[2], date[3], date[4]);
    return date;
}

//* Save Novca
VosticGiveMoney(playerid, novac)
{
	PlayerInfo[playerid][Novac] += novac;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][Novac]);

    if(IgracUlogovan[playerid] == true)
    {
        new query[500];
		mysql_format(SQL,query,sizeof(query),"UPDATE `players` SET `Novac` = '%d' WHERE `ID` = '%d'",
            PlayerInfo[playerid][Novac],
			PlayerInfo[playerid][SQLID]);
		mysql_tquery(SQL,query);        
    }

	return PlayerInfo[playerid][Novac];
}

stock GetPlayerSQLID(playerid)
{
	return (PlayerInfo[playerid][SQLID]);
}

FormatNumber(number, const prefix[] = "$")
{
	static
		value[32],
		length;

	format(value, sizeof(value), "%d", (number < 0) ? (-number) : (number));

	if ((length = strlen(value)) > 3)
	{
		for (new i = length, l = 0; --i >= 0; l ++) {
		    if ((l > 0) && (l % 3 == 0)) strins(value, ",", i + 1);
		}
	}
	if (prefix[0] != 0)
	    strins(value, prefix, 0);

	if (number < 0)
		strins(value, "-", 0);

	return value;
}
