/***
 *
 *  ##     ##    ###    ########  ##    ## ##          ###    ##    ## ########  
 *  ###   ###   ## ##   ##     ##  ##  ##  ##         ## ##   ###   ## ##     ## 
 *  #### ####  ##   ##  ##     ##   ####   ##        ##   ##  ####  ## ##     ## 
 *  ## ### ## ##     ## ########     ##    ##       ##     ## ## ## ## ##     ## 
 *  ##     ## ######### ##   ##      ##    ##       ######### ##  #### ##     ## 
 *  ##     ## ##     ## ##    ##     ##    ##       ##     ## ##   ### ##     ## 
 *  ##     ## ##     ## ##     ##    ##    ######## ##     ## ##    ## ########   
 *
 *  @Author         Vostic & Ogy_
 *  @Date           05th May 2023
 *  @Weburl         https://maryland-ogc.com
 *  @Project        maryland_project
 *
 *  @File           staff.script
 *  @Module         staff
 */

#include <ysilib\YSI_Coding\y_hooks>

static  
	bool:StaffDuty[MAX_PLAYERS];

new answeringQuestion[MAX_PLAYERS];

new stfveh[MAX_PLAYERS] = { INVALID_VEHICLE_ID, ... };

new gCountTime;

enum {

	e_ASSISTANT = 1,
	e_STAFF,
	e_DIRECTOR,
	e_HEAD_MANAGER,
	e_OWNER
}

enum E_LOCK_TYPE {
    LOCK_TYPE_TEMPORARY = 1,
    LOCK_TYPE_PERMANENT
}


#define MAX_QUESTIONS       (1000)

#define MAX_QUESTION_LEN    (36)

enum e_STAFF_QUESTION_DATA {

    ID,
    PlayerID,
    Question[MAX_QUESTION_LEN],
    Date[36]
}

new QuestionInfo[MAX_QUESTIONS][e_STAFF_QUESTION_DATA];
new Iterator:iter_Question<MAX_QUESTIONS>;


enum E_GLOBAL_SETTINGS {

    bool:VIP_CHAT,
    bool:STAFF_CHAT,
    bool:LEADER_CHAT,
    bool:FACTION_CHAT,
    bool:ASKQ_CHAT
}

new Spectate[MAX_PLAYERS];

new globalSettings[E_GLOBAL_SETTINGS];

enum E_PLAYER_MUTE_DATA {

    muteTime,
    mutedBy[MAX_PLAYER_NAME],
    muteDate[64]
}

new PlayerMute[MAX_PLAYERS][E_PLAYER_MUTE_DATA];
new Timer_UpdatePlayerMute[MAX_PLAYERS];

// Na vrhu fajla dodati
static bool:AdminFreeze[MAX_PLAYERS];

forward mysql_SendQeustion(id);
public mysql_SendQeustion(id) {

    Iter_Add(iter_Question, id);

    foreach(new i : Player) {

        if(PlayerInfo[i][Staff] >= 1) {

            SendClientMessage(i, x_server, "staff \187; "c_white"%s je postavio upit : "c_server"%s", ReturnPlayerName(QuestionInfo[id][PlayerID]), QuestionInfo[id][Question]);
            break;
        }
    }

    return (true);
}

forward mysql_LoadQuestions(playerid);
public mysql_LoadQuestions(playerid) {

    new rows = cache_num_rows();
    if(!rows) return SendClientMessage(playerid, x_ltorange, "STAFF: "c_white"Nema pitanja...");

	new dialogStr[460];
	for(new i = 0; i < rows; i++) { 
		new pID = 0, questionSTR[MAX_QUESTION_LEN], qDate[36];
		cache_get_value_name_int(i, "PlayerID", pID);
		cache_get_value_name(i, "Question", questionSTR, MAX_QUESTION_LEN);
		cache_get_value_name(i, "Date", qDate, 36);
	
		format(dialogStr, sizeof dialogStr, "{737be1}%s%s {ffffff}| %s | {daa520}%s\n", dialogStr, ReturnPlayerName(pID), questionSTR, qDate);
		Dialog_Show(playerid, "dialog_Questions", DIALOG_STYLE_LIST, "Questions", dialogStr, "Odaberi", "Odustani");
	}

    return(true);
}

forward delayedKick(playerid);
public delayedKick(playerid) {

	CallLocalFunction("OnPlayerDisconnect", "dd", playerid, 5);
	Kick(playerid);

	return (true);
}

hook OnGameModeInit()
{
	print("staff/staff.script loaded");

	mysql_tquery(SQL, "TRUNCATE TABLE `staff_questions`");

	return 1;
}

// hook OnPlayerConnect(playerid)
// {
// 	PlayerInfo[playerid][Staff] = 0;
//     Spectate[playerid] = INVALID_PLAYER_ID;
	
// 	// U?itaj specijalni rank
// 	new query[128];
// 	mysql_format(SQL, query, sizeof(query), 
// 		"SELECT SpecialRank FROM accounts WHERE ID = %d",
// 		GetPlayerSQLID(playerid));
// 	mysql_tquery(SQL, query, "OnSpecialRankLoad", "i", playerid);
	
// 	// Dodaj u OnPlayerConnect
// 	AdminFreeze[playerid] = false;
	
// 	return 1;
// }

// hook OnCharacterLoaded(playerid)
// {    
//     LoadCharacterDisarm(playerid);

//     new q[128];
//     mysql_format(SQL, q, sizeof q, "SELECT * FROM `player_mutes` WHERE `character_id` = '%d'", GetCharacterSQLID(playerid));
//     mysql_tquery(SQL, q, "mysql_LoadPlayerMute", "d", playerid);

//     return Y_HOOKS_CONTINUE_RETURN_1;
// }

hook OnPlayerDisconnect(playerid, reason)
{
	DestroyVehicle(stfveh[playerid]);

	stfveh[playerid] = INVALID_PLAYER_ID;
	StaffDuty[playerid] = false;

	static str[32];
	switch(reason) {
		case 1: { str="Disconnect"; }
		case 0: { str="Crash"; }
		case 5: { str="Kick"; }
	}

	foreach(new i : Player) {

		if(PlayerInfo[i][Staff] >= 1) {

			SendClientMessage(i, x_server, "DISCONNECT: "c_white"Igrac %s je napustio server | "c_server"%s", ReturnPlayerName(playerid), str);
		}
	}
	return 1;
}

hook OnPlayerDeath(playerid, killerid, WEAPON:reason)
{
	DestroyVehicle(stfveh[playerid]);

	stfveh[playerid] = INVALID_PLAYER_ID;

	return 1;
}

hook OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{	

	if(GetPlayerStaffLevel(playerid) >= e_ASSISTANT)
	{
		SetPlayerPos(playerid, fX, fY, fZ);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}

	return Y_HOOKS_CONTINUE_RETURN_1;
}

stock GetPlayerStaffLevel(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	return PlayerInfo[playerid][Staff];
}

stock ReturnStaffLevel(playerid) {

	new level[64];

	switch(GetPlayerStaffLevel(playerid)) {

		case 1: 	{ level = 	"Asistent"; 			}
		case 2: 	{ level = 	"Staff"; 				}
		case 3: 	{ level = 	"Dircetor"; 			}
		case 4: 	{ level = 	"Community Manager"; 	}
		case 5: 	{ level = 	"Owner"; 				}
		default: 	{ level = 	"[Unknown]"; 			}
	}
	return level;
}

stock Staff_KickPlayer(player, admin, const reason[] = "High Ping") {

	if( player == INVALID_PLAYER_ID ) return (false);
	if( admin == INVALID_PLAYER_ID ) return (false);

	SendClientMessage(player, x_server, "KICK: "c_white"Kickovani ste sa servera.");
	SendClientMessage(player, x_server, "KICK: "c_white"Admin : "c_server"%s", ReturnCharacterName(admin));
	SendClientMessage(player, x_server, "KICK: "c_white"Razlog : "c_server"%s", reason);

	SetTimerEx("delayedKick", 650, false, "d", player);

	static tmp_str[248];
	format(tmp_str, sizeof tmp_str, "KICK: "c_white"Staff %d \187; %s[%d] je kickovao igraca %s[%d]. Razlog : %s", PlayerInfo[admin][Staff], ReturnCharacterName(admin), admin, reason);

	foreach (new i : Player)
		if (PlayerInfo[i][Staff])
			SendClientMessage(i, x_purple, tmp_str);

	return (true);
}

YCMD:askqon(playerid, params[], help) {
    if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    if(globalSettings[ASKQ_CHAT])
        return SendClientMessage(playerid, x_ltorange, "#ASKQ: "c_white"Da iskljucite ASKQ koristite /askqoff.");

    globalSettings[ASKQ_CHAT] = true;
    SendClientMessageToAll(x_ltorange, "#ASKQ: "c_white"Staff %s[%d] je ukljucio askq!", ReturnCharacterName(playerid), playerid);

    return (true);
}

YCMD:askqoff(playerid, params[], help) 
{
    if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);
    if(!globalSettings[ASKQ_CHAT])
        return SendClientMessage(playerid, x_ltorange, "#ASKQ: "c_white"Da ukljucite ASKQ koristite /askqon.");

    globalSettings[ASKQ_CHAT] = false;
    SendClientMessageToAll(x_ltorange, "#ASKQ: "c_white"Staff %s[%d] je iskljucio askq!", ReturnCharacterName(playerid), playerid);

    return 1;
}

YCMD:askq(playerid, params[], help) {

    if(!globalSettings[ASKQ_CHAT])
        return SendClientMessage(playerid, x_ltorange, "#ASKQ: "c_white"Askq je iskljucen!");

    new text[MAX_QUESTION_LEN];
    if(sscanf(params, "s[246]", text)) return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/askq [Pitanje]");

    new question[MAX_QUESTION_LEN];
    strmid(question, text, 0, sizeof text, MAX_QUESTION_LEN);

    new qID = Iter_Free(iter_Question);

    QuestionInfo[qID][ID] = qID;
    QuestionInfo[qID][PlayerID] = playerid;
    QuestionInfo[qID][Question] = question;
    QuestionInfo[qID][Date] = ReturnDate();

    new q[400];
    mysql_format(MySQL:SQL, q, sizeof q, "INSERT INTO `staff_questions` (`ID`, `PlayerID`, `Question`, `Date`) \
                                          VALUES ('%d', '%d', '%e', '%e')",
                                          QuestionInfo[qID][ID], QuestionInfo[qID][PlayerID],
                                          QuestionInfo[qID][Question], QuestionInfo[qID][Date]);
    mysql_tquery(MySQL:SQL, q, "mysql_SendQeustion", "d", qID);
    return (true);
}

@alias(lp, questions);
YCMD:questions(playerid, params[], help) 
{
    
    if(PlayerInfo[playerid][Staff] < 1) return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Niste dovoljan staff level!");

    new q[128];
    mysql_format(SQL, q, sizeof q, "SELECT * FROM `staff_questions`");
    mysql_tquery(SQL, q, "mysql_LoadQuestions", "d", playerid);

    return 1;
}

YCMD:sduty(playerid, params[], help)
{
	if(help)
    {
		notification.Show(playerid, "Help", "Komanda koja vam omogucava da budete na Staff Duznosti.", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if(GetPlayerStaffLevel(playerid) == 0)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!.", "!", BOXCOLOR_RED);

	if(StaffDuty[playerid] == false)
 	{
		SetPlayerHealth( playerid, 100);
		SetPlayerArmour( playerid, 99);
		
		StaffDuty[ playerid ] = true;
		va_SendClientMessageToAll(-1,""c_server"» "c_white"Staff "c_server"%s "c_white"je sada na duznosti /askq", ReturnPlayerName(playerid));
	}
	else if(StaffDuty[playerid] == true)
	{
	 	StaffDuty[playerid] = false;
		va_SendClientMessageToAll(-1,""c_server"» "c_white"Staff "c_server"%s "c_white"vise nije na duznosti.", ReturnPlayerName(playerid));
	}
    return true;
}

YCMD:sc(playerid, const string: params[], help)
{
	if(help)
    {
        notification.Show(playerid, "Help", "Komanda koja vam omogucava da pisete u Staff Chat.", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!.", "!", BOXCOLOR_RED);

    if(!globalSettings[STAFF_CHAT])
        return SendServerMessage(playerid, "Trenutno je iskljucen staff chat!");

	if (isnull(params))
		return notification.Show(playerid, "Koriscenje", "/sc [Tekst]", "?", BOXCOLOR_BLUE);

	static tmp_str[128];

	format(tmp_str, sizeof(tmp_str), "|SC| %s » %s(%d): "c_white"%s", ReturnStaffLevel(playerid), ReturnPlayerName(playerid), playerid, params);

	foreach (new i: Player)
		if (PlayerInfo[i][Staff] && IsStaffChatEnabled() )
			SendClientMessage(i, x_purple, tmp_str);
	
    return 1;
}

YCMD:sveh(playerid, params[], help)
{
	if(help)
    {
        notification.Show(playerid, "Help", "Komanda koja vam kreira Staff vozilo.", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new Float:x, Float:y, Float:z;

	GetPlayerPos(playerid, x, y, z);

	if (stfveh[playerid] == INVALID_VEHICLE_ID) 
	{
		if (isnull(params))
		return notification.Show(playerid, "Greska", "Null parametri!", "1", BOXCOLOR_RED);

		new modelid = strval(params);

		if (400 > modelid > 611)
			return notification.Show(playerid, "Greska", "Invalid model vozila | 400 - 611 |", "!", BOXCOLOR_RED);

		new vehicleid = stfveh[playerid] = CreateVehicleEx(modelid, x, y, z+2.0, 0.0, 1, 0, 1500, false, false, 50);

		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		SetVehicleNumberPlate(vehicleid, "STAFF");
		PutPlayerInVehicle(playerid, vehicleid, 0);
		ChangeVehicleColours(vehicleid, 0, 0);
		SetCameraBehindPlayer(playerid);
		
	    new bool:engine, bool:lights, bool:alarm, bool:doors, bool:bonnet, bool:boot, bool:objective;
	    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	    if (IsVehicleBicycle(GetVehicleModel(vehicleid)))
	    {
	        SetVehicleParamsEx(vehicleid, true, false, false, doors, bonnet, boot, objective);
	    }
	    else
	    {
	        SetVehicleParamsEx(vehicleid, false, false, false, doors, bonnet, boot, objective);
	    }
		notification.Show(playerid, "Info", "Uspjesno ste stvorili staff vozilo!", "!", BOXCOLOR_GREEN);
	}
	else 
	{
		DestroyVehicle(stfveh[playerid]);
		stfveh[playerid] = INVALID_PLAYER_ID;
		notification.Show(playerid, "USPESNO", "Unistili ste vozilo, da ga stvorite kucajte '/veh [Model ID]'.", "!", BOXCOLOR_GREEN);
	}
	
    return 1;
}

YCMD:goto(playerid, params[],help)
{
	if(help)
    {
        notification.Show(playerid, "Help", "Komanda koja vam dozvoljava port do odredjenog igraca.", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new giveplayerid, giveplayer[MAX_PLAYER_NAME];

	new Float:plx,Float:ply,Float:plz;

	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

	if(!sscanf(params, "u", giveplayerid))
	{	
		GetPlayerPos(giveplayerid, plx, ply, plz);
			
		if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, plx, ply+4, plz);
		}
		else
		{
			SetPlayerPos(playerid,plx,ply+2, plz);
		}
		SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
	}
    return 1;
}

YCMD:cc(playerid, params[], help)
{
	if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja cisti chat igracima", "?", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "/sc [Tekst]", "?", BOXCOLOR_BLUE);

	for(new cc; cc < 110; cc++)
	{
		SendClientMessageToAll(-1, "");
	}

	static fmt_string[120], sati, minuta, sekunda; gettime(sati, minuta, sekunda);
	format(fmt_string, sizeof(fmt_string), ""c_server"CHAT"c_server2"BOX: "c_white"Chat je ocistio "c_server"%s", ReturnPlayerName(playerid));
	SendClientMessageToAll(-1, fmt_string);
	SendClientMessageToAll(-1, ""c_white"\175;\175;\175;\175;\175;\175;\175;\175;\175;\175;\175;\175;\175;\175;\175;\175;" );
	format( fmt_string, sizeof( fmt_string ), "\t\t\t\t\t\t"c_server" » "c_white"Trenutno vreme je: "c_server"%02d:%02d:%02d", sati, minuta, sekunda); 
	SendClientMessageToAll(-1, fmt_string );
	SendClientMessageToAll(-1, "\t\t\t\t\t\t"c_server" » "c_white""c_server"");

    return 1;
}

YCMD:fixveh(playerid, params[], help) = fv;
YCMD:fv(playerid, params[], help) {
    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new vehicleid;
    
    if(isnull(params)) {
        if(!IsPlayerInAnyVehicle(playerid))
            return SendClientMessage(playerid, x_red, "maryland // "c_white"Morate biti u vozilu ili navesti ID vozila!");
            
        vehicleid = GetPlayerVehicleID(playerid);
    }
    else {
        if(sscanf(params, "i", vehicleid))
            return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/fv [ID vozila]");
            
        if(vehicleid < 1 || vehicleid > MAX_VEHICLES || !IsValidVehicle(vehicleid))
            return SendClientMessage(playerid, x_red, "maryland // "c_white"Navedeno vozilo ne postoji!");
    }
    
    RepairVehicle(vehicleid);
    SetVehicleHealth(vehicleid, 1000.0);
    
    // Log za staff akcije
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je popravio vozilo ID: %d", ReturnPlayerName(playerid), vehicleid);
    mysql_write_log(log_str, LOG_TYPE_STAFF);
    
    SendClientMessage(playerid, x_server, "maryland \187; "c_white"Popravili ste vozilo (ID: %d)", vehicleid);
    
    return 1;
}

YCMD:gethere(playerid, const params[], help)
{
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda da dovucete igraca do sebe", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new targetid = INVALID_PLAYER_ID;

	if(sscanf(params, "u", targetid)) return notification.Show(playerid, "KORISCENJE", "/gethere [id]", "?", BOXCOLOR_BLUE);

	if(targetid == INVALID_PLAYER_ID) return notification.Show(playerid, "GRESKA", "Taj id nije na serveru", "!", BOXCOLOR_RED);

	new Float:x, Float:y, Float:z;

	GetPlayerPos(playerid, x, y, z);

	SetPlayerPos(targetid, x+1, y, z+1);

	SetPlayerInterior(targetid, GetPlayerInterior(playerid));

	SetPlayerVirtualWorld(targetid, GetPlayerVirtualWorld(playerid));

	new name[MAX_PLAYER_NAME];
	GetPlayerName(targetid, name, sizeof(name));

	static fmt_string[60];

	format(fmt_string, sizeof(fmt_string),"Teleportovali ste igraca %s do sebe.", name);
	notification.Show(playerid, "USPESNO", fmt_string, "!", BOXCOLOR_GREEN);

	GetPlayerName(playerid, name, sizeof(name));

	format(fmt_string, sizeof(fmt_string), "Staff %s vas je teleportovao do sebe.", name);
	notification.Show(targetid, "USPESNO", fmt_string, "!", BOXCOLOR_GREEN);

    return 1;
}

YCMD:nitro(playerid, params[], help)
{
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda koja vam daje nitro", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);

	notification.Show(playerid, "USPESNO", "Ugradili ste nitro u vase vozilo.", "!", BOXCOLOR_GREEN);

	return 1;
}
YCMD:jetpack(playerid, params[], help)
{
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda koja vam daje jetpack", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);

	notification.Show(playerid, "USPESNO", "Uzeli ste jetpack.", "!", BOXCOLOR_GREEN);

	return 1;
}

YCMD:setskin(playerid, const string: params[], help)
{
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda koja vam omogucava da postavite odredjeni skin od 1 do 311.", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	static
		targetid,
		skinid;

	if (sscanf(params, "ri", targetid, skinid))
		return notification.Show(playerid, "KORISCENJE", "/setskin [targetid] [skinid]", "+", BOXCOLOR_BLUE);

	if (!(1 <= skinid <= 311))
		return notification.Show(playerid, "GRESKA", "Pogresan ID skina", "!", BOXCOLOR_RED);

	if (GetPlayerSkin(targetid) == skinid)
		return notification.Show(playerid, "GRESKA", "Taj igrac vec ima taj skin.", "!", BOXCOLOR_RED);

	SetPlayerSkin(targetid, skinid);

	CharacterInfo[targetid][Skin] = skinid;

	UpdateSqlInt(SQL, "characters", "cSkin", skinid, "character_id", GetCharacterSQLID(targetid));

    return 1;
}

YCMD:xgoto(playerid, params[], help)
{
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda koja vam omogucava teleport na odredjene koordinate.", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new Float:x, Float:y, Float:z;

	static fmt_string[100];

	if (sscanf(params, "P<,>fff", x, y, z)) notification.Show(playerid, "KORISCENJE", "xgoto <X Float> <Y Float> <Z Float>", "+", BOXCOLOR_BLUE);
	else
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    SetVehiclePos(GetPlayerVehicleID(playerid), x,y,z);
		}
		else
		{
		    SetPlayerPos(playerid, x, y, z);
		}
		format(fmt_string, sizeof(fmt_string), "Postavili ste koordinate na %f, %f, %f", x, y, z);
		notification.Show(playerid, "USPESNO", fmt_string, "+", BOXCOLOR_GREEN);
	}
 	return 1;
}

YCMD:setint(const playerid, params[], help)
{
	if(help)
    {
        SendClientMessage(playerid, x_ltorange, "[Syntax]: {ffffff}Postavka igracevog interijera.");
        return 1;
    }
	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new id,int;
	if(sscanf(params, "ii", id, int)) return SendClientMessage(playerid, x_ltorange, "[Syntax]: {ffffff}/setint id igraca id interior");
 
	SetPlayerInterior(id, int);

	va_SendClientMessage(playerid, x_ltorange, "[SET-INT]: > {ffffff}Postavili ste igracu(%s) interior(%d)",ReturnPlayerName(id),int);
	va_SendClientMessage(id, x_ltorange, "[SET-INT]: > {ffffff}%s vam je podesio interior(%d)",ReturnPlayerName(playerid),int);
	SendClientMessage(playerid, -1, "PlayerVW %d | PlayerInt %d", GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
	return Y_HOOKS_CONTINUE_RETURN_1;
}

YCMD:setvw(const playerid, params[], help)
{
	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);
	
	new id,vw;
	if(sscanf(params, "ii", id, vw)) return SendClientMessage(playerid, x_ltorange, "[Syntax]: {ffffff}/setvw id igraca id interior");
 
	SetPlayerVirtualWorld(id, vw);

	va_SendClientMessage(playerid, x_ltorange, "[SET-VW]: > {ffffff}Postavili ste igracu(%s) virtual world(%d)",ReturnPlayerName(id),vw);
	va_SendClientMessage(id, x_ltorange, "[SET-VW]: > {ffffff}%s vam je podesio virtual world(%d)",ReturnPlayerName(playerid),vw);
	return Y_HOOKS_CONTINUE_RETURN_1;
}

YCMD:getint(playerid, params[], help) 
{
	SendClientMessage(playerid, -1, "PlayerVW %d | PlayerInt %d", GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
	return 1;
}

YCMD:setstaff(playerid, const string: params[], help)
{
	if(help)
    {
		notification.Show(playerid, "HELP", "0 - Skinut Staff | 1. Assistent | 2. Staff | 3. Director | 4. Community Manager | 5. Owner.", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
		return notification.Show(playerid, "Greska", "Samo community manager moze ovo!", "!", BOXCOLOR_RED);

	static
		targetid,
		level;

	if (sscanf(params, "ri", targetid, level))
		return notification.Show(playerid, "KORISCENJE", "/setstaff [targetid] [0/5]", "+", BOXCOLOR_BLUE);

	if (!level && !PlayerInfo[targetid][Staff])
		return notification.Show(playerid, "GRESKA", "Taj igrac nije u staff-u", "!", BOXCOLOR_RED);

	if (level == PlayerInfo[targetid][Staff])
		return notification.Show(playerid, "GRESKA", "Taj igrac je vec staff", "!", BOXCOLOR_RED);

	PlayerInfo[targetid][Staff] = level;
	
	if (!level)
	{
		static fmt_string[128];

		format(fmt_string, sizeof(fmt_string), "%s Vas je izbacio iz staff-a.", ReturnPlayerName(playerid));
		notification.Show(targetid, "INFO", fmt_string, "+", BOXCOLOR_BLUE);

		format(fmt_string, sizeof(fmt_string), "Izbacili ste %s iz staff-a.", ReturnPlayerName(targetid));
		notification.Show(playerid, "USPESNO", fmt_string, "!", BOXCOLOR_GREEN);
	}
	else if(level < 0 || level > 5) return notification.Show(targetid, "INFO", "Koristi /help setstaff da vidis validne levele", "?", BOXCOLOR_BLUE);
	{
		static fmt_string[128];

		format(fmt_string, sizeof(fmt_string), "%s Vas je ubacio u staff, nivo %i.", ReturnPlayerName(playerid), level);
		notification.Show(targetid, "INFO", fmt_string, "+", BOXCOLOR_BLUE);

		format(fmt_string, sizeof(fmt_string), "Ubacili ste %s u staff, nivo %i.", ReturnPlayerName(targetid), level);
		notification.Show(playerid, "USPESNO", fmt_string, "!", BOXCOLOR_GREEN);

		static log_str[128];
		format(log_str, sizeof log_str, "STAFF:  %s je postavio staff level %d igracu %s", ReturnPlayerName(playerid), level, ReturnPlayerName(targetid));
		mysql_write_log(log_str, LOG_TYPE_STAFF);
	}
	SavePlayer(targetid);
	
    return 1;
}

YCMD:utisaj(playerid, params[], help) = mute;
YCMD:mutiraj(playerid, params[], help) = mue;
YCMD:mute(playerid, params[], help) {

    if(GetPlayerStaffLevel(playerid) < e_STAFF) 
        return SendServerMessage(playerid, "Niste u mogucnosti koristiti ovu komandu!");

    new targetid, minutes;
    if(sscanf(params, "ud", targetid, minutes))
        return SendServerMessage(playerid, "/mute <ID/Ime> <Minuti>");

    if(minutes <= 0 || minutes > 300)
        return SendServerMessage(playerid, "Minute ne mogu biti manje od 1 ili vece od 300. Ukoliko zelite unmute igraca iskoristite komandu /unmute.");

    // if(targetid == playerid)
    //     return SendServerMessage(playerid, "Ne mozete utisati samog sebe!");

    // if(GetPlayerStaffLevel(targetid) > 0)
    //     return SendServerMessage(playerid, "Ne mozete utisati tog igraca!");

    if(targetid == INVALID_PLAYER_ID)
        return SendServerMessage(playerid, "Doslo je do greske, prijavite administraciji!");

    if(!IsPlayerConnected(targetid))
        return SendServerMessage(playerid, "Taj igrac nije konektovan na server.");

    if(IsPlayerMuted(targetid))
        return SendServerMessage(playerid, "Taj igrac je vec utisan!");

    PlayerMute[targetid][muteTime] = minutes;

    static tmpStr[MAX_PLAYER_NAME+1];
    format(tmpStr, sizeof tmpStr, "%s", ReturnCharacterName(targetid));

    strmid(PlayerMute[targetid][mutedBy],tmpStr, 0, sizeof tmpStr);

    SendServerMessage(targetid, "Staff %s[%d] vas je mutirao na %d minuta!", ReturnCharacterName(playerid), playerid, minutes);
    SendServerMessage(playerid, "Uspjesno ste mutirali %s[%d] na %d minuta!", ReturnCharacterName(targetid), targetid, minutes);

    foreach (new i: Player)
		if (PlayerInfo[i][Staff] && IsStaffChatEnabled() )
			SendClientMessage(i, x_purple, "#MUTE: "c_white"Staff %s[%d] je mutirao igraca %s[%d] na %d minuta!", ReturnCharacterName(playerid), playerid, ReturnCharacterName(targetid), targetid, minutes);

    new q[488];
    mysql_format(SQL, q, sizeof q, "INSERT INTO `player_mutes` (`character_id`, `muteTime`, `mutedBy`, `muteDate`) VALUES ('%d', '%d', '%e', 'NOW()')",
                                    GetCharacterSQLID(targetid), minutes, PlayerMute[targetid][mutedBy]);
    mysql_tquery(SQL, q);


    Timer_UpdatePlayerMute[playerid] = SetTimerEx("Mute_UpdatePlayerTime", 1000 * 60, false, "d", playerid);

    return 1;
}

YCMD:mutirani(playerid, params[], help) {

    if(GetPlayerStaffLevel(playerid) < 1)
        return SendServerMessage(playerid, "Niste u mogucnosti ovu komandu!");

    static dlgStr[2488], str[288];

    foreach(new i : Player) {

        if(IsPlayerMuted(i)) {

            format(str, sizeof str, ""c_server"%s[%d]\tPreostalo Vrjeme : %d Minuta\n");
            strcat(dlgStr, str);
        }
    }

    Dialog_Show(playerid, "_noReturn", DIALOG_STYLE_TABLIST, "Mutirani Igraci", dlgStr, "Ok", "");

    return 1;
}

YCMD:restart(playerid, const string: params[], help)
{
	if(!IsPlayerAdmin(playerid) && GetPlayerStaffLevel(playerid) < e_OWNER)
		return notification.Show(playerid, "Greska", "Samo owner moze ovo!", "!", BOXCOLOR_RED);

	static log_str[128];
	format(log_str, sizeof log_str, "STAFF:  %s restartovao server", ReturnPlayerName(playerid));
	mysql_write_log(log_str, LOG_TYPE_STAFF);

	SendRconCommand("gmx");

    return 1;
}

YCMD:slap(playerid, const params[], help)
{
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda da slapate igraca", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new targetid;

	if(sscanf(params, "u", targetid)) return notification.Show(playerid, "KORISCENJE", "/slap [id]", "?", BOXCOLOR_BLUE);

	if(targetid == INVALID_PLAYER_ID) return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru", "!", BOXCOLOR_RED);
	//if(targetid == playerid) return notification.Show(playerid, "GRESKA", "Ne mozes slapati samog sebe", "!", BOXCOLOR_RED);

	new Float:pPos[3];

	GetPlayerPos(targetid, pPos[0], pPos[1], pPos[2]);

	SetPlayerPos(targetid, pPos[0], pPos[1], pPos[2]+5);

	va_SendClientMessage(targetid, x_ltorange, "SLAP > {ffffff}%s vas je slapao.",ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, x_ltorange, "SLAP > {ffffff}Slapao si igraca %s.",ReturnPlayerName(targetid));

	static log_str[128];
	format(log_str, sizeof log_str, "STAFF:  %s je slapovao igraca %s", ReturnPlayerName(playerid), ReturnPlayerName(targetid));
	mysql_write_log(log_str, LOG_TYPE_STAFF);

	return 1;
}

YCMD:givemoney(playerid, params[], help) 
{
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda da date novac igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid)< e_HEAD_MANAGER)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new targetid, cash;

	if(sscanf(params, "ud", targetid, cash)) return notification.Show(playerid, "KORISCENJE", "/givemoney [id] [cash]", "?", BOXCOLOR_BLUE);

	if(targetid == INVALID_PLAYER_ID) return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru", "!", BOXCOLOR_RED);

	// - Dodati kada se odradi player_currency
	// GiveMoneyEx(playerid, cash);

	return 1;
}


YCMD:givegun(playerid, const params[], help) {

	if(help)
    {
		SendClientMessage(playerid, -1, ""c_server"help // "c_white"1(Brass Knuckles) 2(Golf Club) 3(Nite Stick) 4(Knife) 5(Baseball Bat)");
		SendClientMessage(playerid, -1, ""c_server"help // "c_white"6(Shovel) 7(Pool Cue) 10-13(Dildo) 14(Flowers) 15(Cane)");
		SendClientMessage(playerid, -1, ""c_server"help // "c_white"22(Pistol) 23(Silence Pistol) 24(Desert Eagle) 25(Shot Gun) 29(MP5)");
		SendClientMessage(playerid, -1, ""c_server"help // "c_white"30(AK47) 31(M4) 33(Country Rifle) 34(Sniper Rifle) 41(Spray Can)");
		SendClientMessage(playerid, -1, ""c_server"help // "c_white"42(Fire Extinguisher) 43(Camera) 46(Parachute)");
        return (true);
    }

	new targetid, gun, ammo;
	if(sscanf( params, "uii", targetid, gun, ammo)) return SendClientMessage(playerid, 0xAFAFAFAA, "/givegun [ ID/Deo imena ] [weaponid(eg. 46 = Parachute)] [ammo]");
	if(gun < 1 || gun > 46 )
	{ SendClientMessage(playerid, x_red, "Krivi WeaponID!"); return 1; }
	if( ammo <1 || ammo > 999 )
	{ SendClientMessage(playerid, x_red, "Ne moze ispod 1 ili 999 metaka!"); return 1; }

    if(HasDisarm(targetid))
        return SendServerMessage(playerid, "Taj igrac ima dissarm!");

	if(IsPlayerConnected(targetid)) {   

	    if(targetid != INVALID_PLAYER_ID) {
		
			GivePlayerWeapon(targetid, WEAPON:gun, ammo);
			va_SendClientMessage(targetid, x_red, "Admin %s ti je dao oruzje.", ReturnPlayerName(playerid));
			va_SendClientMessage(playerid, x_red, "Dao si oruzje igracu %s.", ReturnPlayerName(targetid));

			static log_str[128];
			format(log_str, sizeof log_str, "STAFF:  %s je dao oruzje id %d igracu %s", ReturnPlayerName(playerid), gun, ReturnPlayerName(targetid));
    		mysql_write_log(log_str, LOG_TYPE_STAFF);
		}
	}

	return 1;
}

YCMD:sm(playerid, params[], help) 
{
	
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda da posaljete poruku svim igracima", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid)< e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new mess[128], chat_str[286];

	if(sscanf(params, "s[128]", mess)) return notification.Show(playerid, "USAGE", "/sm [ message ]", "?", BOXCOLOR_GREEN);

	format(chat_str, sizeof chat_str, ""c_blue"%s %s \171; "c_white"%s", ReturnStaffLevel(playerid), ReturnPlayerName(playerid), mess);
	SendClientMessage(playerid, -1, chat_str);

	return 1;
}

YCMD:spm(playerid, params[], help) 
{
	
	if(help)
    {
		notification.Show(playerid, "HELP", "Komanda da posaljete poruku svim igracima", "+", BOXCOLOR_BLUE);
        return 1;
    }

	if (GetPlayerStaffLevel(playerid)< e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff lvl. moze ovo!", "!", BOXCOLOR_RED);

	new targetid, mess[128], chat_str[286];

	if(sscanf(params, "us[128]", targetid, mess)) return notification.Show(playerid, "USAGE", "/spm [ID/Ime] [ message ]", "?", BOXCOLOR_GREEN);

	if(targetid == playerid)
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Ne mozes poslati staff poruku samom sebi!");

	if(targetid == INVALID_PLAYER_ID)
		return (true);

	if(!IsPlayerConnected(targetid))
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije konektovan na server!");

	

	format(chat_str, sizeof chat_str, ""c_ltorange"SPM \187; %s[%d]: %s", ReturnCharacterName(playerid), playerid, mess);
	SendClientMessage(targetid, -1, chat_str);
	
	format(chat_str, sizeof chat_str, ""c_ltorange"SPM: \187; %s[%d] -> %s[%d]: %s", ReturnCharacterName(playerid), playerid, ReturnCharacterName(targetid), targetid, mess);

	foreach(new i : Player)
		if(PlayerInfo[i][Staff] > 0)
			SendClientMessage(i, -1, chat_str);

	return 1;
}

YCMD:togchat(playerid, params[], help) 
{
    
    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return SendServerMessage(playerid, "Samo head manager moze ovo!");

    new option[32];
    if(sscanf(params, "s[32]", option))
    {
        SendServerMessage(playerid, "/togchat <chat>");
        SendServerMessage(playerid, ""c_ltorange"* "c_white"Leader | Staff | VIP | Faction");
        return ~1;
    }

    if(!strcmp(option, "leader", true)) {

        if(globalSettings[LEADER_CHAT]) {

            globalSettings[LEADER_CHAT] = false;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je iskljucio leader chat!", ReturnCharacterName(playerid));
            return ~1;
        }

        else if(!globalSettings[LEADER_CHAT]) {

            globalSettings[LEADER_CHAT] = true;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je ukljucio leader chat!", ReturnCharacterName(playerid));
            return ~1;
        }
    }

    if(!strcmp(option, "staff", true)) {

        if(globalSettings[STAFF_CHAT]) {

            globalSettings[STAFF_CHAT] = false;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je iskljucio staff chat!", ReturnCharacterName(playerid));
            return ~1;
        }

        else if(!globalSettings[STAFF_CHAT]) {

            globalSettings[STAFF_CHAT] = true;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je ukljucio staff chat!", ReturnCharacterName(playerid));
            return ~1;
        }
    }

    if(!strcmp(option, "vip", true)) {

        if(globalSettings[VIP_CHAT]) {

            globalSettings[VIP_CHAT] = false;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je iskljucio vip chat!", ReturnCharacterName(playerid));
            return ~1;
        }

        else if(!globalSettings[VIP_CHAT]) {

            globalSettings[VIP_CHAT] = true;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je ukljucio vip chat!", ReturnCharacterName(playerid));
            return ~1;
        }
    }

    if(!strcmp(option, "Faction", true)) {

        if(globalSettings[FACTION_CHAT]) {

            globalSettings[FACTION_CHAT] = false;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je iskljucio faction chat!", ReturnCharacterName(playerid));
            return ~1;
        }

        else if(!globalSettings[FACTION_CHAT]) {

            globalSettings[FACTION_CHAT] = true;
            SendClientMessageToAll(x_ltorange, "#CHAT: "c_white"Admin %s je ukljucio faction chat!", ReturnCharacterName(playerid));
            return ~1;
        }
    }

    return 1;
}

//////////////////////////////////////////////////////////////
// Player punishments

stock AddPlayerWarn(playerid, const  reason[]) {

    //dodati proveru za invalid igraca
	new query[512], playercharid, warn_expire;
	playercharid = GetCharacterSQLID(playerid);
	warn_expire = gettime() + 30 * 24 * 60 * 60; // 30 days

	mysql_format(SQL, query, sizeof(query), "INSERT INTO warns (character_id, warn_date, warn_reason, warn_expire) VALUES (%d, NOW(), '%s', FROM_UNIXTIME(%d));", playercharid, reason, warn_expire);
	mysql_tquery(SQL, query);

	//Check how many warns player have
	CheckPlayerWarns(playerid);

}

// Check for warns - Proveriti da li warn expire vraca kao string ili int.

stock CheckPlayerWarns(playerid) {

	new q[512], playercharid;
	playercharid = GetCharacterSQLID(playerid);

	mysql_format(SQL, q, sizeof(q), "SELECT COUNT(*) AS warn_count FROM warns WHERE character_id = %d AND warn_expire > NOW() AND active = 1;", playercharid);
	mysql_tquery(SQL, q, "OnPlayerWarnCountCheck", "i", playerid);

}

forward mysql_LoadPlayerMute(playerid);
public mysql_LoadPlayerMute(playerid) {

    new rows = cache_num_rows();
    if(!rows) return (true);

    cache_get_value_name_int(0, "muteTime", PlayerMute[playerid][muteTime]);
    cache_get_value_name(0, "mutedBy", PlayerMute[playerid][mutedBy], MAX_PLAYER_NAME);
    cache_get_value_name(0, "muteDate", PlayerMute[playerid][muteDate], 64);

    if(PlayerMute[playerid][muteTime] > 0) {

        Timer_UpdatePlayerMute[playerid] = SetTimerEx("Mute_UpdatePlayerTime", 1000 * 60, false, "d", playerid);
    }

    return (true);
}

forward Mute_UpdatePlayerTime(playerid);
public Mute_UpdatePlayerTime(playerid) {

    if(PlayerMute[playerid][muteTime] > 0) {

        KillTimer(Timer_UpdatePlayerMute[playerid]);
        PlayerMute[playerid][muteTime]--;

        if(PlayerMute[playerid][muteTime] <= 0) {

            SendServerMessage(playerid, "Istekao vam je mute!");

            PlayerMute[playerid][muteTime] = 0;
            PlayerMute[playerid][mutedBy][0] = '\0';
            PlayerMute[playerid][muteDate][0] = '\0';

            foreach(new i : Player) {

                if(PlayerInfo[playerid][Staff] > 0) {

                    SendClientMessage(playerid, x_ltorange, "#MUTE: "c_white"Igracu %s[%d] je istekao mute.", ReturnCharacterName(playerid), playerid);
                }
            }
            return ~1;
        }

        Timer_UpdatePlayerMute[playerid] = SetTimerEx("Mute_UpdatePlayerTime", 1000 * 60, false, "d", playerid);
    }

    return (true);
}

forward OnPlayerWarnCountCheck(playerid, warn_count);
public OnPlayerWarnCountCheck(playerid, warn_count) {

	if(warn_count >= 5) {
		BanPlayer(playerid, "Previse warnova (5/5) u 30 dana.");
	}
}

stock BanPlayer(playerid, const reason[], bool:perma = false, timeban = 0) {

	new q[512];

	if(perma) {
		mysql_format(SQL, q, sizeof(q), "INSERT INTO bans (character_id, ban_reason, ban_date, is_permanent) VALUES (%d, '%s', NOW(), 1)", PlayerInfo[playerid][SQLID], reason);
	} else {
		mysql_format(SQL, q, sizeof(q), "INSERT INTO bans (character_id, ban_reason, ban_date, ban_expire) VALUES (%d, '%s', NOW(), NOW() + %d)", PlayerInfo[playerid][SQLID], reason, timeban);
	}

	mysql_tquery(SQL, q);
	Kick(playerid);
}

stock BanPlayerIP(playerid, const reason[], bool:perma = false, timeban = 0) {

	new q[512], playerip[16];
	GetPlayerIp(playerid, playerip, sizeof(playerip));

	if(perma) {
		mysql_format(SQL, q, sizeof(q), "INSERT INTO bans (character_id, ban_reason, ban_date, ban_ip, is_permanent) VALUES (%d, '%s', NOW(), '%s', 1)", PlayerInfo[playerid][SQLID], reason, playerip);
	} else {
		mysql_format(SQL, q, sizeof(q), "INSERT INTO bans (character_id, ban_reason, ban_date, ban_ip, ban_expire) VALUES (%d, '%s', NOW(), '%s', NOW() + %d)", PlayerInfo[playerid][SQLID], reason, playerip, timeban);
	}

	mysql_tquery(SQL, q);

	Kick(playerid);
}

stock IsIPBanned(playerid) {
	new q[256], playerip[16];
	GetPlayerIp(playerid, playerip, sizeof(playerip));

	mysql_format(SQL, q, sizeof(q), "SELECT * FROM bans WHERE ban_ip = '%s' AND (ban_expire > NOW() OR is_permanent = 1);", playerip);
	mysql_tquery(SQL, q, "OnCheckIPBan", "i", playerid);
}

forward OnCheckIPBan(playerid);
public OnCheckIPBan(playerid) {

	// If is ip banned kick from nnnn
	SendClientMessage(playerid, x_red, "maryland // "c_white"Mrs kuci.");
	Kick(playerid);
}


//Punishments commands

YCMD:warn(playerid, params[], help)
{
	if(help) return SendClientMessage(playerid, x_blue, "maryland // "c_white"/warn [id] [reason]");
	
	new targetid, reason[128];
	if(sscanf(params, "us[128]", targetid, reason)) return SendClientMessage(playerid, x_red, "maryland // "c_white"Koristi /warn [id] [reason]");

	AddPlayerWarn(targetid, reason);
	SendClientMessage(playerid, x_blue, "maryland // "c_white"Uspesno si postavio igracu %s warn.", ReturnPlayerName(targetid));

	return (true);
}

YCMD:kick(playerid, params[], help) 
{
	
	if (GetPlayerStaffLevel(playerid)< e_STAFF)
		return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

	new target, reason[64];
	if(sscanf(params, "us[64]", target, reason))
		return notification.Show(playerid, "Usage", "/kick ID/Ime Razlog", "?", BOXCOLOR_BLUE);

	if(!IsPlayerConnected(target))
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije konektovan na server!");

	if(target == INVALID_PLAYER_ID)
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Invalid pid!");

	if(target == playerid)
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Ne mozes kickovati samog sebe!");

	if(PlayerInfo[target][Staff] != 0)
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Ne mozete kickovati igraca koji je dio Staff-a!");

	if(strlen(reason) < 0 || strlen(reason) > sizeof reason)
		return (true);

	Staff_KickPlayer(target, playerid, reason);
	return 1;
}

YCMD:ban(playerid, params[], help)
{
	if(help) return SendClientMessage(playerid, x_blue, "maryland // "c_white"/ban [id] [reason] [vreme(minuti) / perma]");

	new targetid, reason[128], ban_time[16];
	if(sscanf(params, "us[128]s[16]", targetid, reason, ban_time)) return SendClientMessage(playerid, x_red, "maryland // "c_white"Koristi /ban [id] [reason] [vreme(minuti) / perma]");

	if(strcmp(ban_time, "perma", true) == 0) {
		BanPlayer(targetid, reason, true);
	} else {
		new timeban = strval(ban_time);
		BanPlayer(targetid, reason, false, timeban);
	}

	return true;
}


YCMD:banip(playerid, params[], help)
{
	if(help) return SendClientMessage(playerid, x_blue, "maryland // "c_white"/banip [id] [reason] [vreme(minuti) / perma]");

	new targetid, reason[128], ban_time[16];
	if(sscanf(params, "us[128]s[16]", targetid, reason, ban_time)) return SendClientMessage(playerid, x_red, "maryland // "c_white"Koristi /banip [id] [reason] [vreme(minuti) / perma]");

	if(strcmp(ban_time, "perma", true) == 0) {
		BanPlayerIP(targetid, reason, true);
	} else {
		new timeban = strval(ban_time);
		BanPlayerIP(targetid, reason, false, timeban);
	}

	return true;
}

YCMD:freeze(playerid, params[], help){


	if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

	new target;
	if(sscanf(params, "u", target))
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/freeze <igrac>");

	if(target == INVALID_PLAYER_ID) return (true);
	if(!IsPlayerConnected(target)) return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije na serveru!");

	if(!AdminFreeze[target]) {
		SendClientMessage(playerid, x_server, "maryland \187; "c_white"Zamrznuli ste igraca "c_server"%s", ReturnPlayerName(target));
		SendClientMessage(target, x_server, "maryland \187; "c_white"Zamrznuti ste od strane admina!");
		TogglePlayerControllable(target, false); // Ispravljeno sa playerid na target
		AdminFreeze[target] = true;

		static log_str[128];
		format(log_str, sizeof log_str, "STAFF:  %s je zamrznuo igraca %s", ReturnPlayerName(playerid), ReturnPlayerName(target));
		mysql_write_log(log_str, LOG_TYPE_STAFF);
	}
	else {
		SendClientMessage(playerid, x_server, "maryland \187; "c_white"Odmrznuli ste igraca "c_server"%s", ReturnPlayerName(target));
		SendClientMessage(target, x_server, "maryland \187; "c_white"Odmrznuti ste od strane admina!");
		TogglePlayerControllable(target, true); // Ispravljeno sa playerid na target
		AdminFreeze[target] = false;

		static log_str[128];
		format(log_str, sizeof log_str, "STAFF:  %s je odmrznuo igraca %s", ReturnPlayerName(playerid), ReturnPlayerName(target));
		mysql_write_log(log_str, LOG_TYPE_STAFF);
	}

	return (true);
}

YCMD:tod(playerid, params[], help) {
    if (GetPlayerStaffLevel(playerid) < e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    if(help) return SendClientMessage(playerid, x_blue, "maryland // "c_white"/tod [ vreme (0-23) ]");

    new time;
    if(sscanf(params, "i", time)) return SendClientMessage(playerid, x_blue, "maryland // "c_white"/tod [ vreme (0-23) ]");
    
    // Provera da li je vreme u validnom opsegu
    if(time < 0 || time > 23) 
        return SendClientMessage(playerid, x_red, "maryland // "c_white"Vreme mora biti izmedju 0 i 23 sata!");

    SetWorldTime(time);
    SendClientMessageToAll(x_blue, "maryland \187; "c_white"Vreme servera je trenutno %d sati.", time);

    return (true);
}

YCMD:aclearwl(playerid, params[], help) {

	if (GetPlayerStaffLevel(playerid)< e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);
	
	new target;
	if(sscanf(params, "u", target))
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije konektovan na server!");

	if(!IsPlayerConnected(target))
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije konektovan na server!");

	if(target == INVALID_PLAYER_ID)
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Invalid playerid!");

	if(!IsPlayerWanted(target)) 
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije trazen!");

	Police_SetPlayerWantedLevel(target, 0, "Staff");
	
	SendClientMessage(playerid, x_server, "maryland \187; "c_white"Ocistili ste wanted level igracu %s", ReturnPlayerName(target));
	SendClientMessage(target, x_server, "maryland \187; "c_white"Admin %s vam je ocistio wanted level", ReturnPlayerName(playerid));

	static log_str[128];
    format(log_str, sizeof log_str, "STAFF:  %s je ocistio igracu %s wanted level", ReturnPlayerName(playerid), ReturnPlayerName(target));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

	return (true);
}

YCMD:unprison(playerid, params[], help) {

	if (GetPlayerStaffLevel(playerid)< e_ASSISTANT)
		return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);
	
	new target;
	if(sscanf(params, "u", target))
		return notification.Show(playerid, "GRESKA", "/unprison Igrac", "?", BOXCOLOR_RED);

	if(!IsPlayerConnected(target))
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije konektovan na server!");

	if(target == INVALID_PLAYER_ID)
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Invalid playerid!");

	if(PlayerPrison[target][jailTime] == 0)
		return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije zatvoren!");
	
	PlayerPrison[target][jailTime] = 0;
	SendClientMessage(target, x_grey, "prison \187; "c_white"Pusteni ste na slobodu, budite bolji gradjanin!");

	new q[128];
	mysql_format(SQL, q, sizeof q, "DELETE FROM `player_prisons` WHERE `characterID` = '%d'", GetCharacterSQLID(target));
	mysql_tquery(SQL, q);

	Police_SetPlayerWantedLevel(target, 0);
	SetPlayerPos(target, 1799.1263,-1577.9620,14.0765);
	SetPlayerVirtualWorld(target, 0);
	SetPlayerInterior(target, 0);

    static log_str[128];
    format(log_str, sizeof log_str, "STAFF:  %s je oslobodio igraca %s | UNPRISON", ReturnPlayerName(playerid), ReturnPlayerName(target));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

	return (true);
}

Dialog:dialog_Questions(const playerid, response, listitem, string: inputtext[]) {

    if(!response) return (true);

    new qID = listitem;
    answeringQuestion[playerid] = qID;
    Dialog_Show(playerid, "question_Answer", DIALOG_STYLE_INPUT, "Answer", "[ %s ] -> %s", "Odgovori", "Nazad", ReturnPlayerName(QuestionInfo[qID][PlayerID]), QuestionInfo[qID][Question]);
    
    return true;
}

Dialog:question_Answer(const playerid, response, listitem, string: inputtext[]) {

    if(!response) {

        new q[128];
        mysql_format(SQL, q, sizeof q, "SELECT * FROM `staff_questions`");
        mysql_tquery(SQL, q, "mysql_LoadQuestions", "d", playerid);
        return (true);
    }

    new qID = answeringQuestion[playerid];

    new answer[MAX_QUESTION_LEN];
    if(sscanf(inputtext, "s[246]", answer)) return Dialog_Show(playerid, "question_Answer", DIALOG_STYLE_INPUT, "Answer", "[ %s ] -> %s", "Odgovori", "Nazad", ReturnPlayerName(QuestionInfo[qID][PlayerID]), QuestionInfo[qID][Question]);
    
    new xResponse[MAX_QUESTION_LEN];
    strmid(xResponse, answer, 0, sizeof answer, MAX_QUESTION_LEN);

    SendClientMessage(QuestionInfo[qID][PlayerID], x_server, "maryland \187; "c_white"%s vam je odgovorio na pitanje : %s", ReturnPlayerName(playerid), xResponse);
    SendClientMessage(playerid, x_server, "maryland \187; "c_white"Odgovorili ste igracu %s odgovorom : %s", ReturnPlayerName(QuestionInfo[qID][PlayerID]), xResponse);

    new q[246];
    mysql_format(SQL, q, sizeof q, "DELETE FROM `staff_questions` WHERE `PlayerID` = '%d' AND `ID` = '%d'", QuestionInfo[qID][PlayerID], QuestionInfo[qID][ID]);
    mysql_tquery(SQL, q);

    QuestionInfo[qID][ID] = -1;
    QuestionInfo[qID][PlayerID] = INVALID_PLAYER_ID;
    QuestionInfo[qID][Question] = EOS;
    QuestionInfo[qID][Date] = EOS;

    Iter_Remove(iter_Question, qID);
    return true;

}

#include "backend/staff/jails.pwn"								//* Jail script

YCMD:checkid(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja pronalazi ID igraca po imenu karaktera", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new charname[MAX_PLAYER_NAME];
    if(sscanf(params, "s[24]", charname))
        return notification.Show(playerid, "KORISCENJE", "/checkid [Ime_Karaktera]", "?", BOXCOLOR_BLUE);

    new bool:found = false;
    foreach(new i : Player)
    {
        if(strcmp(ReturnCharacterName(i), charname, true) == 0)
        {
            new string[128];
            format(string, sizeof(string), "Igrac %s ima ID: %d", charname, i);
            notification.Show(playerid, "INFO", string, "i", BOXCOLOR_GREEN);
            found = true;
            break;
        }
    }

    if(!found)
    {
        new string[128];
        format(string, sizeof(string), "Igrac sa imenom %s nije pronadjen na serveru!", charname);
        notification.Show(playerid, "GRESKA", string, "!", BOXCOLOR_RED);
    }

    return 1;
}

YCMD:fvall(playerid, params[], help) = fixallcars;
YCMD:fixallcars(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja popravlja sva vozila na serveru", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    for(new i = 1; i < MAX_VEHICLES; i++)
    {
        if(IsValidVehicle(i))
        {
            RepairVehicle(i);
            SetVehicleHealth(i, 999.0);
        }
    }

    new string[128];
    format(string, sizeof(string), ""c_server"» "c_white"Staff %s je popravio sva vozila na serveru!", ReturnPlayerName(playerid));
    SendClientMessageToAll(-1, string);
    
    notification.Show(playerid, "USPESNO", "Popravili ste sva vozila na serveru!", "!", BOXCOLOR_GREEN);

    return 1;
}
YCMD:fuelall(playerid, params[], help) = fillallcars;
YCMD:fillallcars(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja puni gorivo svim vozilima na serveru", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    for(new i = 1; i < MAX_VEHICLES; i++)
    {
        if(IsValidVehicle(i))
        {
            eVehicle[i][vFuel] = 100;
        }
    }

    new string[128];
    format(string, sizeof(string), ""c_server"» "c_white"Staff %s je napunio gorivo svim vozilima na serveru!", ReturnPlayerName(playerid));
    SendClientMessageToAll(-1, string);
    
    notification.Show(playerid, "USPESNO", "Napunili ste gorivo svim vozilima na serveru!", "!", BOXCOLOR_GREEN);

    return 1;
}

YCMD:sethp(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja postavlja HP igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new targetid, Float:health;
    if(sscanf(params, "uf", targetid, health))
        return notification.Show(playerid, "KORISCENJE", "/sethp [ID] [HP]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(health < 0.0 || health > 100.0)
        return notification.Show(playerid, "GRESKA", "HP mora biti izmedju 0 i 100!", "!", BOXCOLOR_RED);

    SetPlayerHealth(targetid, health);

    new string[128];
    format(string, sizeof(string), "Postavili ste HP igracu %s na %.1f", ReturnCharacterName(targetid), health);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je postavio HP na %.1f", ReturnPlayerName(playerid), health);
    notification.Show(targetid, "INFO", string, "i", BOXCOLOR_BLUE);

    return 1;
}
// Alias for easier use
YCMD:setarm(playerid, params[], help) = setarmor;
YCMD:setarmor(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja postavlja Armor igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new targetid, Float:armor;
    if(sscanf(params, "uf", targetid, armor))
        return notification.Show(playerid, "KORISCENJE", "/setarmor [ID] [Armor]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(armor < 0.0 || armor > 100.0)
        return notification.Show(playerid, "GRESKA", "Armor mora biti izmedju 0 i 100!", "!", BOXCOLOR_RED);

    SetPlayerArmour(targetid, armor);

    new string[128];
    format(string, sizeof(string), "Postavili ste Armor igracu %s na %.1f", ReturnCharacterName(targetid), armor);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je postavio Armor na %.1f", ReturnPlayerName(playerid), armor);
    notification.Show(targetid, "INFO", string, "i", BOXCOLOR_BLUE);

    return 1;
}

YCMD:getip(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja prikazuje IP adresu igraca", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid;
    if(sscanf(params, "u", targetid))
        return notification.Show(playerid, "KORISCENJE", "/getip [ID]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    new ip[16];
    GetPlayerIp(targetid, ip, sizeof(ip));

    new string[128];
    format(string, sizeof(string), "IP adresa igraca %s je: %s", ReturnCharacterName(targetid), ip);
    notification.Show(playerid, "INFO", string, "i", BOXCOLOR_BLUE);

    // Log the IP check for security
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je proverio IP adresu igraca %s", ReturnPlayerName(playerid), ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:passwordigraca(playerid, params[], help) = playerpassword;
YCMD:playerpassword(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja prikazuje sifru igraca iz baze", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "Greska", "Samo head manager+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid;
    if(sscanf(params, "u", targetid))
        return notification.Show(playerid, "KORISCENJE", "/playerpassword [ID]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    new query[256];
    mysql_format(SQL, query, sizeof(query), "SELECT Password FROM accounts WHERE ID = %d", PlayerInfo[targetid][SQLID]);
    mysql_tquery(SQL, query, "OnPasswordCheck", "dd", playerid, targetid);

    return 1;
}

forward OnPasswordCheck(adminid, targetid);
public OnPasswordCheck(adminid, targetid)
{
    if(!cache_num_rows())
        return notification.Show(adminid, "GRESKA", "Nije pronadjen account u bazi!", "!", BOXCOLOR_RED);

    new password[65];
    cache_get_value_name(0, "Password", password, sizeof(password));

    new string[128];
    format(string, sizeof(string), "Sifra igraca %s je: %s", ReturnCharacterName(targetid), password);
    notification.Show(adminid, "INFO", string, "i", BOXCOLOR_BLUE);

    // Log the password check for security
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je proverio sifru igraca %s", ReturnPlayerName(adminid), ReturnCharacterName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:setpass(playerid, params[], help) = changepass;
YCMD:changepass(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja menja sifru igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "Greska", "Samo head manager+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid, newpass[65];
    if(sscanf(params, "us[65]", targetid, newpass))
        return notification.Show(playerid, "KORISCENJE", "/changepass [ID] [Nova_Sifra]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(strlen(newpass) < 6 || strlen(newpass) > 64)
        return notification.Show(playerid, "GRESKA", "Sifra mora biti izmedju 6 i 64 karaktera!", "!", BOXCOLOR_RED);

    new query[256];
    mysql_format(SQL, query, sizeof(query), "UPDATE accounts SET Password = '%e' WHERE ID = %d", newpass, PlayerInfo[targetid][SQLID]);
    mysql_tquery(SQL, query, "OnPasswordChange", "dds", playerid, targetid, newpass);

    return 1;
}

forward OnPasswordChange(adminid, targetid, const newpass[]);
public OnPasswordChange(adminid, targetid, const newpass[])
{
    if(!cache_affected_rows())
        return notification.Show(adminid, "GRESKA", "Doslo je do greske pri promeni sifre!", "!", BOXCOLOR_RED);

    new string[128];
    format(string, sizeof(string), "Promenili ste sifru igraca %s na: %s", ReturnCharacterName(targetid), newpass);
    notification.Show(adminid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je promenio sifru na: %s", ReturnPlayerName(adminid), newpass);
    notification.Show(targetid, "INFO", string, "i", BOXCOLOR_BLUE);

    // Log the password change for security
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je promenio sifru igraca %s", ReturnPlayerName(adminid), ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:sethpall(playerid, params[], help) = setallhp;
YCMD:healall(playerid, params[], help) = setallhp;
YCMD:setallhp(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja postavlja HP svim igracima", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new Float:health;
    if(sscanf(params, "f", health))
        return notification.Show(playerid, "KORISCENJE", "/sethpall [HP]", "?", BOXCOLOR_BLUE);

    if(health < 0.0 || health > 100.0)
        return notification.Show(playerid, "GRESKA", "HP mora biti izmedju 0 i 100!", "!", BOXCOLOR_RED);

    foreach(new i : Player)
    {
        SetPlayerHealth(i, health);
    }

    new string[128];
    format(string, sizeof(string), ""c_server"» "c_white"Staff %s je postavio svim igracima HP na %.1f", ReturnPlayerName(playerid), health);
    SendClientMessageToAll(-1, string);
    
    notification.Show(playerid, "USPESNO", "Postavili ste HP svim igracima!", "!", BOXCOLOR_GREEN);

    return 1;
}

// Aliases for easier use
YCMD:setarmorall(playerid, params[], help) = setallarmor;
YCMD:setarmall(playerid, params[], help) = setallarmor;
YCMD:armorall(playerid, params[], help) = setallarmor;
YCMD:setallarmor(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja postavlja Armor svim igracima", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new Float:armor;
    if(sscanf(params, "f", armor))
        return notification.Show(playerid, "KORISCENJE", "/setallarmor [Armor]", "?", BOXCOLOR_BLUE);

    if(armor < 0.0 || armor > 100.0)
        return notification.Show(playerid, "GRESKA", "Armor mora biti izmedju 0 i 100!", "!", BOXCOLOR_RED);

    foreach(new i : Player)
    {
        SetPlayerArmour(i, armor);
    }

    new string[128];
    format(string, sizeof(string), ""c_server"» "c_white"Staff %s je postavio svim igracima Armor na %.1f", ReturnPlayerName(playerid), armor);
    SendClientMessageToAll(-1, string);
    
    notification.Show(playerid, "USPESNO", "Postavili ste Armor svim igracima!", "!", BOXCOLOR_GREEN);

    return 1;
}

// Alias for easier use
YCMD:fuelveh(playerid, params[], help) = fillveh;
YCMD:fillveh(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja puni gorivo odredjenom vozilu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new vehicleid;
    if(sscanf(params, "i", vehicleid))
        return notification.Show(playerid, "KORISCENJE", "/fillveh [ID_Vozila]", "?", BOXCOLOR_BLUE);

    if(!IsValidVehicle(vehicleid))
        return notification.Show(playerid, "GRESKA", "Nevazeci ID vozila!", "!", BOXCOLOR_RED);

    eVehicle[vehicleid][vFuel] = 100;

    new string[128];
    format(string, sizeof(string), "Napunili ste gorivo vozilu ID: %d", vehicleid);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    return 1;
}

YCMD:unbanip(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja skida IP ban", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "Greska", "Samo head manager+ moze ovo!", "!", BOXCOLOR_RED);

    new ip[16];
    if(sscanf(params, "s[16]", ip))
        return notification.Show(playerid, "KORISCENJE", "/unbanip [IP]", "?", BOXCOLOR_BLUE);

    new query[128];
    mysql_format(SQL, query, sizeof(query), "SELECT COUNT(*) FROM bans WHERE ban_ip = '%e'", ip);
    mysql_tquery(SQL, query, "OnUnbanIPCheck", "ds", playerid, ip);

    return 1;
}

forward OnUnbanIPCheck(playerid, const ip[]);
public OnUnbanIPCheck(playerid, const ip[])
{
    new count;
    cache_get_value_name_int(0, "COUNT(*)", count);

    if(count == 0)
        return notification.Show(playerid, "GRESKA", "Ta IP adresa nije banovana!", "!", BOXCOLOR_RED);

    new query[128];
    mysql_format(SQL, query, sizeof(query), "DELETE FROM bans WHERE ban_ip = '%e'", ip);
    mysql_tquery(SQL, query);

    new string[128];
    format(string, sizeof(string), "Uspesno ste unbannovali IP adresu: %s", ip);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Log
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je unbanovao IP adresu %s", ReturnPlayerName(playerid), ip);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:offbanip(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja banuje offline igraca po IP adresi", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "Greska", "Samo head manager+ moze ovo!", "!", BOXCOLOR_RED);

    new charname[MAX_PLAYER_NAME], ip[16], reason[64], ban_time[16];
    if(sscanf(params, "s[24]s[16]s[64]s[16]", charname, ip, reason, ban_time))
        return notification.Show(playerid, "KORISCENJE", "/offbanip [Ime_Prezime] [IP] [Razlog] [Vreme/perma]", "?", BOXCOLOR_BLUE);

    new query[128];
    mysql_format(SQL, query, sizeof(query), "SELECT COUNT(*) FROM bans WHERE ban_ip = '%e'", ip);
    mysql_tquery(SQL, query, "OnOffbanIPCheck", "dssss", playerid, charname, ip, reason, ban_time);

    return 1;
}

forward OnOffbanIPCheck(playerid, const charname[], const ip[], const reason[], const ban_time[]);
public OnOffbanIPCheck(playerid, const charname[], const ip[], const reason[], const ban_time[])
{
    new count;
    cache_get_value_name_int(0, "COUNT(*)", count);

    if(count > 0)
        return notification.Show(playerid, "GRESKA", "Ta IP adresa je vec banovana!", "!", BOXCOLOR_RED);

    new query[512];
    if(strcmp(ban_time, "perma", true) == 0)
    {
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO bans (character_id, ban_reason, ban_date, ban_ip, is_permanent) \
            SELECT c.id, '%e', NOW(), '%e', 1 FROM characters c WHERE c.name = '%e'", 
            reason, ip, charname);
    }
    else
    {
        new timeban = strval(ban_time);
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO bans (character_id, ban_reason, ban_date, ban_ip, ban_expire) \
            SELECT c.id, '%e', NOW(), '%e', NOW() + INTERVAL %d MINUTE FROM characters c WHERE c.name = '%e'", 
            reason, ip, timeban, charname);
    }
    mysql_tquery(SQL, query);

    new string[128];
    format(string, sizeof(string), "Uspesno ste banovali IP %s (Karakter: %s)", ip, charname);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Log
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je offline banovao IP %s (Karakter: %s)", ReturnPlayerName(playerid), ip, charname);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:offunbanip(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja unbana IP offline igraca", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "Greska", "Samo head manager+ moze ovo!", "!", BOXCOLOR_RED);

    new charname[MAX_PLAYER_NAME];
    if(sscanf(params, "s[24]", charname))
        return notification.Show(playerid, "KORISCENJE", "/offunbanip [Ime_Prezime]", "?", BOXCOLOR_BLUE);

    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT COUNT(*) FROM bans b \
        INNER JOIN characters c ON b.character_id = c.character_id \
        WHERE c.cName = '%e'", charname);
    mysql_tquery(SQL, query, "OnOffunbanIPCheck", "ds", playerid, charname);

    return 1;
}

forward OnOffunbanIPCheck(playerid, const charname[]);
public OnOffunbanIPCheck(playerid, const charname[])
{
    new count;
    cache_get_value_name_int(0, "COUNT(*)", count);

    if(count == 0)
        return notification.Show(playerid, "GRESKA", "Taj karakter nije banovan!", "!", BOXCOLOR_RED);

    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "DELETE b FROM bans b \
        INNER JOIN characters c ON b.character_id = c.character_id \
        WHERE c.cName = '%e'", charname);
    mysql_tquery(SQL, query);

    new string[128];
    format(string, sizeof(string), "Uspesno ste unbannovali IP za karaktera: %s", charname);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Log
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je offline unbanovao IP za karaktera %s", ReturnPlayerName(playerid), charname);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Helper function to validate IP format
stock IsValidIP(const ip[])
{
    new len = strlen(ip);
    if(len < 7 || len > 15) return 0;

    new dots = 0, numbers = 0;
    for(new i = 0; i < len; i++)
    {
        if(ip[i] == '.')
        {
            dots++;
            numbers = 0;
            continue;
        }
        if(ip[i] < '0' || ip[i] > '9') return 0;
        numbers++;
        if(numbers > 3) return 0;
    }
    return (dots == 3);
}

YCMD:rtc(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja respawna vozila u radiusu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new radius;
    if(sscanf(params, "i", radius))
        return notification.Show(playerid, "KORISCENJE", "/rtc [radius]", "?", BOXCOLOR_BLUE);

    if(radius < 1 || radius > 100)
        return notification.Show(playerid, "GRESKA", "Radius mora biti izmedju 1-100!", "!", BOXCOLOR_RED);

    new Float:playerPos[3], count;
    GetPlayerPos(playerid, playerPos[0], playerPos[1], playerPos[2]);

    for(new vehicleid = 1; vehicleid <= MAX_VEHICLES; vehicleid++)
    {
        if(!IsValidVehicle(vehicleid)) 
            continue;

        new Float:vehPos[3];
        GetVehiclePos(vehicleid, vehPos[0], vehPos[1], vehPos[2]);

        new Float:dist = floatsqroot(
            floatpower(playerPos[0] - vehPos[0], 2) + 
            floatpower(playerPos[1] - vehPos[1], 2) + 
            floatpower(playerPos[2] - vehPos[2], 2)
        );

        if(dist <= float(radius))
        {
            SetVehicleToRespawn(vehicleid);
            count++;
        }
    }

    new string[128];
    format(string, sizeof(string), "Respawnali ste %d vozila u radiusu od %d metara", count, radius);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Log
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je respawnao %d vozila u radiusu od %d metara", ReturnPlayerName(playerid), count, radius);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:rac(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Komanda koja respawna sva vozila na serveru", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new count;
    for(new vehicleid = 1; vehicleid <= MAX_VEHICLES; vehicleid++)
    {
        if(!IsValidVehicle(vehicleid)) 
            continue;

        SetVehicleToRespawn(vehicleid);
        count++;
    }

    new string[128];
    format(string, sizeof(string), "Respawnali ste sva vozila na serveru (%d vozila)", count);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Log
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je respawnao sva vozila na serveru (%d vozila)", ReturnPlayerName(playerid), count);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:srecniid(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Nasumicno bira srecnog igraca za nagradu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new type[32], reward;
    if(sscanf(params, "s[32]i", type, reward))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /srecniid [tip] [nagrada]");
        SendClientMessage(playerid, x_server, "TIPOVI: novac, level, respect");
        SendClientMessage(playerid, x_server, "PRIMER: /srecniid novac 5000");
        return 1;
    }

    if(reward <= 0)
        return notification.Show(playerid, "GRESKA", "Nagrada mora biti veca od 0!", "!", BOXCOLOR_RED);

    // Create array of eligible players
    new validPlayers[MAX_PLAYERS], playerCount;
    foreach(new i : Player)
    {
        if(!IsPlayerConnected(i)) continue;
        if(GetPlayerStaffLevel(i) > 0) continue;
        if(GetPlayerState(i) == PLAYER_STATE_SPECTATING) continue;
        
        validPlayers[playerCount++] = i;
    }

    if(playerCount < 3)
        return notification.Show(playerid, "GRESKA", "Potrebno je minimum 3 igraca online!", "!", BOXCOLOR_RED);

    // Select random winner from valid players
    new winner = validPlayers[random(playerCount)];

    // Give reward
    if(strcmp(type, "novac", true) == 0)
    {
        GivePlayerMoney(winner, reward);
        SendClientMessageToAll(x_server, ""c_server"SRECNI ID: "c_white"Igrac %s je dobio nagradu od $%d!", ReturnPlayerName(winner), reward);
    }
    else if(strcmp(type, "level", true) == 0)
    {
        SetPlayerScore(winner, GetPlayerScore(winner) + reward);
        SendClientMessageToAll(x_server, ""c_server"SRECNI ID: "c_white"Igrac %s je dobio nagradu od %d level-a!", ReturnPlayerName(winner), reward);
    }
    else if(strcmp(type, "respect", true) == 0)
    {
        SendClientMessageToAll(x_server, ""c_server"SRECNI ID: "c_white"Igrac %s je dobio nagradu od %d respect poena!", ReturnPlayerName(winner), reward);
    }
    else
        return notification.Show(playerid, "GRESKA", "Nevazeci tip nagrade!", "!", BOXCOLOR_RED);

    // Log
    new log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je dodelio %s nagradu igracu %s (%s - %d)", 
        ReturnPlayerName(playerid), type, ReturnPlayerName(winner), type, reward);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:admins(playerid, params[], help) = staff;
YCMD:staff(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Prikazuje online staff", "+", BOXCOLOR_BLUE);
        return 1;
    }

    new bool:foundStaff = false;
    SendClientMessage(playerid, x_server, "__________ Online Staff __________");
    
    foreach(new i : Player)
    {
        if(PlayerInfo[i][Staff] > 0)
        {
            new string[128];
            format(string, sizeof(string), "%s %s [%d]", 
                ReturnStaffLevel(i),          // Staff level text (Owner, Head Manager, etc.)
                ReturnPlayerName(i),          // Player name
                i                             // Player ID
            );
            SendClientMessage(playerid, x_white, string);
            foundStaff = true;
        }
    }
    
    if(!foundStaff)
    {
        SendClientMessage(playerid, x_white, "Trenutno nema online staff-a.");
    }
    
    SendClientMessage(playerid, x_server, "_________________________________");
    return 1;
}

YCMD:amusic(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Pusta muziku svim igracima", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "Greska", "Samo head manager+ moze ovo!", "!", BOXCOLOR_RED);

    new option[8], url[256];
    if(sscanf(params, "s[8]S()[256]", option, url))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /amusic [opcija] [url]");
        SendClientMessage(playerid, x_server, "OPCIJE: play, stop");
        SendClientMessage(playerid, x_server, "PRIMER: /amusic play https://example.com/music.mp3");
        return 1;
    }

    if(strcmp(option, "play", true) == 0)
    {
        if(sscanf(params, "{s[8]}s[256]", url))
            return notification.Show(playerid, "GRESKA", "Morate uneti URL!", "!", BOXCOLOR_RED);

        foreach(new i : Player)
        {
            PlayAudioStreamForPlayer(i, url);
        }

        new string[128];
        format(string, sizeof(string), ""c_server"» "c_white"Staff %s je pustio muziku za sve igrace!", ReturnPlayerName(playerid));
        SendClientMessageToAll(-1, string);

        // Log the action
        static log_str[256];
        format(log_str, sizeof log_str, "STAFF: %s je pustio muziku (URL: %s)", ReturnPlayerName(playerid), url);
        mysql_write_log(log_str, LOG_TYPE_STAFF);
    }
    else if(strcmp(option, "stop", true) == 0)
    {
        foreach(new i : Player)
        {
            StopAudioStreamForPlayer(i);
        }

        new string[128];
        format(string, sizeof(string), ""c_server"» "c_white"Staff %s je zaustavio muziku!", ReturnPlayerName(playerid));
        SendClientMessageToAll(-1, string);

        // Log the action
        static log_str[128];
        format(log_str, sizeof log_str, "STAFF: %s je zaustavio muziku", ReturnPlayerName(playerid));
        mysql_write_log(log_str, LOG_TYPE_STAFF);
    }
    else
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /amusic [opcija] [url]");
        SendClientMessage(playerid, x_server, "OPCIJE: play, stop");
        SendClientMessage(playerid, x_server, "PRIMER: /amusic play https://example.com/music.mp3");
    }

    return 1;
}

// Alias for easier use
YCMD:xyz(playerid, params[], help) = vidikoordinate;
YCMD:pos(playerid, params[], help) = vidikoordinate;
YCMD:vidikoordinate(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Prikazuje koordinate igraca", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid;
    if(sscanf(params, "u", targetid))
    {
        // If no parameter, show coordinates of the command user
        new Float:x, Float:y, Float:z, Float:angle;
        GetPlayerPos(playerid, x, y, z);
        GetPlayerFacingAngle(playerid, angle);
        
        new string[256];
        format(string, sizeof(string), ""c_server"» "c_white"Vase koordinate:\nX: %.4f\nY: %.4f\nZ: %.4f\nAngle: %.4f\nInterior: %d\nVirtual World: %d", 
            x, y, z, angle, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
        SendClientMessage(playerid, -1, string);
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "Greska", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    new Float:x, Float:y, Float:z, Float:angle;
    GetPlayerPos(targetid, x, y, z);
    GetPlayerFacingAngle(targetid, angle);

    new string[256];
    format(string, sizeof(string), ""c_server"» "c_white"Koordinate igraca %s:\nX: %.4f\nY: %.4f\nZ: %.4f\nAngle: %.4f\nInterior: %d\nVirtual World: %d", 
        ReturnPlayerName(targetid), x, y, z, angle, GetPlayerInterior(targetid), GetPlayerVirtualWorld(targetid));
    SendClientMessage(playerid, -1, string);

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je proverio koordinate igraca %s", ReturnPlayerName(playerid), ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:hostname(playerid, params[], help) = newhostname;
YCMD:newhostname(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Menja hostname servera", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "Greska", "Samo head manager+ moze ovo!", "!", BOXCOLOR_RED);

    new hostname[128];
    if(sscanf(params, "s[128]", hostname))
        return notification.Show(playerid, "KORISCENJE", "/newhostname [Novi Hostname]", "?", BOXCOLOR_BLUE);

    // Change the server hostname
    SetGameModeText(hostname);
    
    // Use format instead of sprintf
    new rcon_cmd[144];
    format(rcon_cmd, sizeof(rcon_cmd), "hostname %s", hostname);
    SendRconCommand(rcon_cmd);

    // Notify the staff member
    new string[144];
    format(string, sizeof(string), "Uspesno ste promenili hostname servera u: %s", hostname);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Log the action
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je promenio hostname servera u: %s", 
        ReturnPlayerName(playerid), hostname);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:warns(playerid, params[], help) = checkwarns;
YCMD:checkwarns(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Proverava opomene igraca", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid;
    if(sscanf(params, "u", targetid))
        return notification.Show(playerid, "KORISCENJE", "/checkwarns [ID/Ime]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT * FROM warns \
        WHERE character_id = %d \
        AND warn_expire > NOW() \
        AND active = 1 \
        ORDER BY warn_date DESC", 
        GetCharacterSQLID(targetid));
    mysql_tquery(SQL, query, "OnCheckWarns", "dd", playerid, targetid);

    return 1;
}

forward OnCheckWarns(adminid, targetid);
public OnCheckWarns(adminid, targetid)
{
    new rows = cache_num_rows();
    if(rows == 0)
    {
        new string[128];
        format(string, sizeof(string), "Igrac %s nema aktivnih opomena.", ReturnPlayerName(targetid));
        return notification.Show(adminid, "INFO", string, "i", BOXCOLOR_BLUE);
    }

    new string[1024] = "Datum\tRazlog\tIstice\n";
    new warn_date[24], reason[128], warn_expire[24];

    for(new i = 0; i < rows; i++)
    {
        cache_get_value_name(i, "warn_date", warn_date, sizeof(warn_date));
        cache_get_value_name(i, "warn_reason", reason, sizeof(reason));
        cache_get_value_name(i, "warn_expire", warn_expire, sizeof(warn_expire));

        format(string, sizeof(string), "%s%s\t%s\t%s\n", 
            string, warn_date, reason, warn_expire);
    }

    new title[64];
    format(title, sizeof(title), "Aktivne Opomene - %s (%d/5)", ReturnPlayerName(targetid), rows);
    Dialog_Show(adminid, "dialog_Warns", DIALOG_STYLE_TABLIST_HEADERS, title, string, "Zatvori", "");

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je proverio opomene igraca %s", 
        ReturnPlayerName(adminid), ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:seen(playerid, params[], help) = lastseen;
YCMD:lastseen(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Prikazuje kada je igrac poslednji put bio online", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetname[MAX_PLAYER_NAME];
    if(sscanf(params, "s[24]", targetname))
        return notification.Show(playerid, "KORISCENJE", "/lastseen [Ime_Prezime]", "?", BOXCOLOR_BLUE);

    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT \
            cName, \
            cLastLogin, \
            TIMESTAMPDIFF(DAY, cLastLogin, NOW()) as days_ago, \
            TIMESTAMPDIFF(HOUR, cLastLogin, NOW()) as hours_ago, \
            TIMESTAMPDIFF(MINUTE, cLastLogin, NOW()) as minutes_ago \
        FROM characters \
        WHERE cName = '%e' \
        LIMIT 1", 
        targetname);
    mysql_tquery(SQL, query, "OnLastSeen", "ds", playerid, targetname);

    return 1;
}

forward OnLastSeen(playerid, const targetname[]);
public OnLastSeen(playerid, const targetname[])
{
    if(!cache_num_rows())
        return notification.Show(playerid, "GRESKA", "Taj karakter ne postoji u bazi!", "!", BOXCOLOR_RED);

    new name[MAX_PLAYER_NAME], last_login[64];
    new days, hours, minutes;

    cache_get_value_name(0, "cName", name, sizeof(name));
    cache_get_value_name(0, "cLastLogin", last_login, sizeof(last_login));
    cache_get_value_name_int(0, "days_ago", days);
    cache_get_value_name_int(0, "hours_ago", hours);
    cache_get_value_name_int(0, "minutes_ago", minutes);

    // Format time ago message
    new time_str[64];
    if(days > 0)
        format(time_str, sizeof(time_str), "pre %d dana", days);
    else if(hours > 0)
        format(time_str, sizeof(time_str), "pre %d sati", hours);
    else
        format(time_str, sizeof(time_str), "pre %d minuta", minutes);

    new string[256];
    format(string, sizeof(string), "Igrac %s je poslednji put bio online %s\nTacan datum: %s", 
        name, time_str, last_login);
    notification.Show(playerid, "INFO", string, "i", BOXCOLOR_BLUE);

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je proverio last seen za igraca %s", 
        ReturnPlayerName(playerid), name);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:flipcar(playerid, params[], help) = flip;
YCMD:flip(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Okrece prevrnuto vozilo", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(!IsPlayerInAnyVehicle(playerid))
        return notification.Show(playerid, "GRESKA", "Morate biti u vozilu!", "!", BOXCOLOR_RED);

    new vehicleid = GetPlayerVehicleID(playerid);
    new Float:angle;
    GetVehicleZAngle(vehicleid, angle);
    
    // Get vehicle's current position
    new Float:x, Float:y, Float:z;
    GetVehiclePos(vehicleid, x, y, z);
    
    // Set vehicle back on its wheels at the same position
    SetVehiclePos(vehicleid, x, y, z + 0.5);
    SetVehicleZAngle(vehicleid, angle);
    
    notification.Show(playerid, "USPESNO", "Uspesno ste okrenuli vozilo!", "!", BOXCOLOR_GREEN);
    
    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je flipovao vozilo (VehID: %d)", 
        ReturnPlayerName(playerid), vehicleid);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for easier use
YCMD:kazni(playerid, params[], help) = fine;
YCMD:fine(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Kaznjava igraca novcanom kaznom", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid, amount, reason[64];
    if(sscanf(params, "uis[64]", targetid, amount, reason))
        return notification.Show(playerid, "KORISCENJE", "/fine [ID/Ime] [iznos] [razlog]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(amount < 1 || amount > 1000000)
        return notification.Show(playerid, "GRESKA", "Iznos mora biti izmedju $1 i $1,000,000!", "!", BOXCOLOR_RED);

    if(GetPlayerMoney(targetid) < amount)
        return notification.Show(playerid, "GRESKA", "Igrac nema toliko novca!", "!", BOXCOLOR_RED);

    // Remove money from player
    GivePlayerMoney(targetid, -amount);

    // Notify both players
    new string[128];
    
    format(string, sizeof(string), "Kaznili ste %s sa $%d. Razlog: %s", 
        ReturnPlayerName(targetid), amount, reason);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vas je kaznio sa $%d. Razlog: %s", 
        ReturnPlayerName(playerid), amount, reason);
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_RED);

    // Log the action
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je kaznio igraca %s sa $%d. Razlog: %s", 
        ReturnPlayerName(playerid), ReturnPlayerName(targetid), amount, reason);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}


YCMD:kill(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Ubija sebe ili drugog igraca", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    // If no params, kill self
    if(isnull(params))
    {
        SetPlayerHealth(playerid, 0.0);
        notification.Show(playerid, "INFO", "Ubili ste sebe.", "!", BOXCOLOR_BLUE);
        
        // Log self kill
        static log_str[128];
        format(log_str, sizeof log_str, "STAFF: %s je koristio /kill na sebi", ReturnPlayerName(playerid));
        mysql_write_log(log_str, LOG_TYPE_STAFF);
        return 1;
    }

    // If params exist, try to kill target player
    new targetid;
    if(sscanf(params, "u", targetid))
        return notification.Show(playerid, "KORISCENJE", "/kill [ID/Ime]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    // Kill target player
    SetPlayerHealth(targetid, 0.0);

    // Notify both players
    new string[128];
    
    format(string, sizeof(string), "Ubili ste igraca %s", ReturnPlayerName(targetid));
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vas je ubio", ReturnPlayerName(playerid));
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_RED);

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je ubio igraca %s", 
        ReturnPlayerName(playerid), ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// na laptopu radim nmg raditi s bazom dodaj u bazu
/*
CREATE TABLE character_disarms (
    id INT AUTO_INCREMENT PRIMARY KEY,
    character_id INT NOT NULL,
    admin_id INT NOT NULL,
    reason VARCHAR(128) NOT NULL,
    disarm_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    disarm_expire DATETIME NULL,
    active TINYINT(1) DEFAULT 1
);
*/
enum E_DISARM_DATA {
    bool:Disarmed,
    DisarmReason[128],
    DisarmExpireTime,
    DisarmAdminID
}
new DisarmInfo[MAX_PLAYERS][E_DISARM_DATA];

YCMD:disarm(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Oduzima oruzje igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid, type[16], time, reason[64];
    if(sscanf(params, "us[16]I(-1)s[64]", targetid, type, time, reason))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /disarm [ID/Ime] [tip] [vreme] [razlog]");
        SendClientMessage(playerid, x_server, "TIPOVI: perm, temp");
        SendClientMessage(playerid, x_server, "VREME: Za temp disarm, broj sati (1-720)");
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(strcmp(type, "perm", true) != 0 && strcmp(type, "temp", true) != 0)
        return notification.Show(playerid, "GRESKA", "Nevazeci tip! (perm/temp)", "!", BOXCOLOR_RED);

    if(strcmp(type, "temp", true) == 0)
    {
        if(time < 1 || time > 720)
            return notification.Show(playerid, "GRESKA", "Vreme mora biti izmedju 1-720 sati!", "!", BOXCOLOR_RED);
    }

    // Remove all weapons
    ResetPlayerWeapons(targetid);

    // Insert into database
    new query[512];
    if(strcmp(type, "perm", true) == 0)
    {
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO character_disarms (character_id, admin_id, reason, disarm_expire) \
            VALUES (%d, %d, '%e', NULL)", 
            GetCharacterSQLID(targetid), GetCharacterSQLID(playerid), reason);
    }
    else
    {
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO character_disarms (character_id, admin_id, reason, disarm_expire) \
            VALUES (%d, %d, '%e', DATE_ADD(NOW(), INTERVAL %d HOUR))", 
            GetCharacterSQLID(targetid), GetCharacterSQLID(playerid), reason, time);
    }
    mysql_tquery(SQL, query);

    // Set player's disarm status
    DisarmInfo[targetid][Disarmed] = true;

    // Notify players
    new string[144];
    if(strcmp(type, "perm", true) == 0)
    {
        format(string, sizeof(string), "Dali ste permanentni disarm igracu %s. Razlog: %s", 
            ReturnPlayerName(targetid), reason);
        notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

        format(string, sizeof(string), "Staff %s vam je dao permanentni disarm. Razlog: %s", 
            ReturnPlayerName(playerid), reason);
        notification.Show(targetid, "INFO", string, "!", BOXCOLOR_RED);
    }
    else
    {
        format(string, sizeof(string), "Dali ste disarm igracu %s na %d sati. Razlog: %s", 
            ReturnPlayerName(targetid), time, reason);
        notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

        format(string, sizeof(string), "Staff %s vam je dao disarm na %d sati. Razlog: %s", 
            ReturnPlayerName(playerid), time, reason);
        notification.Show(targetid, "INFO", string, "!", BOXCOLOR_RED);
    }

    // Log the action
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je dao %s disarm igracu %s. Razlog: %s", 
        ReturnPlayerName(playerid), type, ReturnPlayerName(targetid), reason);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:undisarm(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Uklanja disarm igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid;
    if(sscanf(params, "u", targetid))
        return notification.Show(playerid, "KORISCENJE", "/undisarm [ID/Ime]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    // Check if player is disarmed
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT id FROM character_disarms \
        WHERE character_id = %d \
        AND active = 1 \
        AND (disarm_expire > NOW() OR disarm_expire IS NULL)", 
        GetCharacterSQLID(targetid));
    mysql_tquery(SQL, query, "OnUndisarmCheck", "dd", playerid, targetid);

    return 1;
}

forward OnUndisarmCheck(adminid, targetid);
public OnUndisarmCheck(adminid, targetid)
{
    if(!cache_num_rows())
        return notification.Show(adminid, "GRESKA", "Taj igrac nema aktivan disarm!", "!", BOXCOLOR_RED);

    // Deactivate all disarms for this player
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "UPDATE character_disarms SET active = 0 \
        WHERE character_id = %d AND active = 1", 
        GetCharacterSQLID(targetid));
    mysql_tquery(SQL, query);

    // Update player's disarm status
    DisarmInfo[targetid][Disarmed] = false;

    // Notify players
    new string[128];
    format(string, sizeof(string), "Uklonili ste disarm igracu %s", ReturnPlayerName(targetid));
    notification.Show(adminid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je uklonio disarm", ReturnPlayerName(adminid));
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_GREEN);

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je uklonio disarm igracu %s", 
        ReturnPlayerName(adminid), ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Add these functions to check disarm status
stock HasDisarm(playerid)
{
    return DisarmInfo[playerid][Disarmed];
}

// Function to load character's disarm status
stock LoadCharacterDisarm(playerid)
{
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT \
            id, \
            reason, \
            disarm_expire, \
            admin_id, \
            UNIX_TIMESTAMP(disarm_expire) AS expire_timestamp \
        FROM character_disarms \
        WHERE character_id = %d \
        AND active = 1 \
        AND (disarm_expire > NOW() OR disarm_expire IS NULL) \
        ORDER BY id DESC LIMIT 1", 
        GetCharacterSQLID(playerid));
    mysql_tquery(SQL, query, "OnCharacterDisarmLoad", "d", playerid);
    return 1;
}

// Callback for loading disarm
forward OnCharacterDisarmLoad(playerid);
public OnCharacterDisarmLoad(playerid)
{
    if(!cache_num_rows())
    {
        DisarmInfo[playerid][Disarmed] = false;
        DisarmInfo[playerid][DisarmExpireTime] = 0;
        DisarmInfo[playerid][DisarmAdminID] = 0;
        DisarmInfo[playerid][DisarmReason][0] = EOS;
        return 1;
    }

    new expire_timestamp;
    cache_get_value_name_int(0, "expire_timestamp", expire_timestamp);
    cache_get_value_name_int(0, "admin_id", DisarmInfo[playerid][DisarmAdminID]);
    cache_get_value_name(0, "reason", DisarmInfo[playerid][DisarmReason], 128);
    
    // If expire_timestamp is 0, it's a permanent disarm
    if(expire_timestamp == 0)
    {
        DisarmInfo[playerid][Disarmed] = true;
        DisarmInfo[playerid][DisarmExpireTime] = 0;
        return 1;
    }

    // Check if disarm has expired
    new current_timestamp = gettime();
    if(current_timestamp > expire_timestamp)
    {
        // Disarm expired, update database
        new query[128];
        mysql_format(SQL, query, sizeof(query), 
            "UPDATE character_disarms SET active = 0 \
            WHERE character_id = %d AND active = 1", 
            GetCharacterSQLID(playerid));
        mysql_tquery(SQL, query);
        
        DisarmInfo[playerid][Disarmed] = false;
        DisarmInfo[playerid][DisarmExpireTime] = 0;
        DisarmInfo[playerid][DisarmAdminID] = 0;
        DisarmInfo[playerid][DisarmReason][0] = EOS;
    }
    else
    {
        DisarmInfo[playerid][Disarmed] = true;
        DisarmInfo[playerid][DisarmExpireTime] = expire_timestamp;
    }
    
    return 1;
}

YCMD:spectate(playerid, params[], help) = spec;
YCMD:spec( playerid, params[], help ) {
    if( GetPlayerStaffLevel(playerid) > 1) {
    
		new id;
	    if( sscanf( params, "u", id ) ) return SendServerMessage( playerid, "/spec [ ID/Ime ]");
	    if( id == INVALID_PLAYER_ID ) return SendServerMessage( playerid, "Nepostojeci ID.");
	    if( id == playerid ) return SendServerMessage( playerid, "Nepostojeci ID.");
	    
        if(PlayerInfo[playerid][Staff] < PlayerInfo[id][Staff]) return SendServerMessage( playerid, "Nisi u mogucnosti specati ovog igraca." );
		Spectate[ playerid ] = id;

    } else return SendServerMessage( playerid, "Niste u mogucnosti koristiti ovu komandu!" );
    return true;
}

YCMD:specoff(playerid, params[], help) 
{
    
    if( GetPlayerStaffLevel(playerid) > 1) {
    
		if(Spectate[playerid] == -1)
            return SendServerMessage(playerid, "Ne specate ni jednog igraca!");

        Spectate[playerid] = -1;
        TogglePlayerSpectating(playerid, false);

    } else return SendServerMessage( playerid, "Niste u mogucnosti koristiti ovu komandu!" );

    return 1;
}

task Spectator[3030]()
{
	foreach( new i : Player ) {
	    if( Spectate[ i ] > -1 && Spectate[ i ] < 500 ) {
			new targetid = Spectate[ i ];
			if( IsPlayerConnected( targetid ) ) {
				TogglePlayerSpectating( i, true );
				if( PlayerInfo[ i ][ Staff ] >= 2 ) {
				    new Float:health;
					GetPlayerHealth( targetid, health );
				    if( IsPlayerInAnyVehicle( targetid ) ) {
						new carid = GetPlayerVehicleID( targetid );
					    PlayerSpectateVehicle( i, carid );
					}
				   	else {
						PlayerSpectatePlayer( i, targetid );
					}
					SetPlayerInterior( i, GetPlayerInterior( targetid ) );
				    SetPlayerVirtualWorld( i, GetPlayerVirtualWorld( targetid ) );
				}
			}
		}
	}
	return 1;
}

// YCMD:disarmtime(playerid, params[], help) {

//     DisarmInfo[playerid][Disarmed] = true;
//     DisarmInfo[playerid][DisarmExpireTime] = expire_timestamp;

//     return 1;
// }

// Example usage in weapon give function:
// stock GivePlayerWeaponChecked(playerid, weaponid, ammo)
// {
//     if(HasDisarm(playerid))
//     {
//         return 0;
//     }
//     return GivePlayerWeapon(playerid, weaponid, ammo);
// }


/*
Add it in base pls..

*/

// Function to check if character is locked > Add it on character select when try to login character
stock bool:IsCharacterLocked(characterid)
{
    new bool:isLocked = false;
    new query[256];
    
    mysql_format(SQL, query, sizeof(query), 
        "SELECT locked, lock_expire FROM character_locks \
        WHERE character_id = %d AND \
        (lock_expire > NOW() OR lock_expire IS NULL) \
        AND active = 1 \
        LIMIT 1", characterid);
        
    new Cache:result = mysql_query(SQL, query);
    
    if(cache_num_rows())
    {
        isLocked = true;
    }
    
    cache_delete(result);
    return isLocked;
}

// Function to get lock information - fixed parameter type
stock GetCharacterLockInfo(characterid, admin_name[], reason[], &expire_timestamp)
{
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT cl.reason, cl.lock_expire, c.cName as admin_name \
        FROM character_locks cl \
        LEFT JOIN characters c ON c.character_id = cl.admin_id \
        WHERE cl.character_id = %d \
        AND (cl.lock_expire > NOW() OR cl.lock_expire IS NULL) \
        AND cl.active = 1 \
        LIMIT 1", characterid);
        
    new Cache:result = mysql_query(SQL, query);
    
    if(cache_num_rows())
    {
        cache_get_value_name(0, "admin_name", admin_name, MAX_PLAYER_NAME);
        cache_get_value_name(0, "reason", reason, 64);
        cache_get_value_name_int(0, "lock_expire", expire_timestamp);
    }
    
    cache_delete(result);
}

// Lock account command
YCMD:lockacc(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Zakljucava karakter igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new targetid, locktype[8], time, reason[64];
    if(sscanf(params, "us[8]I(-1)s[64]", targetid, locktype, time, reason))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /lockacc [ID/Ime] [tip] [vreme] [razlog]");
        SendClientMessage(playerid, x_server, "TIPOVI: perm, temp");
        SendClientMessage(playerid, x_server, "VREME: Za temp lock, broj sati (1-720)");
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(strcmp(locktype, "perm", true) != 0 && strcmp(locktype, "temp", true) != 0)
        return notification.Show(playerid, "GRESKA", "Nevazeci tip! (perm/temp)", "!", BOXCOLOR_RED);

    if(strcmp(locktype, "temp", true) == 0)
    {
        if(time < 1 || time > 720)
            return notification.Show(playerid, "GRESKA", "Vreme mora biti izmedju 1-720 sati!", "!", BOXCOLOR_RED);
    }

    // Insert into database
    new query[512];
    if(strcmp(locktype, "perm", true) == 0)
    {
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO character_locks (character_id, admin_id, reason, lock_expire, lock_type) \
            VALUES (%d, %d, '%e', NULL, %d)", 
            GetCharacterSQLID(targetid), GetCharacterSQLID(playerid), reason, _:LOCK_TYPE_PERMANENT);
    }
    else
    {
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO character_locks (character_id, admin_id, reason, lock_expire, lock_type) \
            VALUES (%d, %d, '%e', DATE_ADD(NOW(), INTERVAL %d HOUR), %d)", 
            GetCharacterSQLID(targetid), GetCharacterSQLID(playerid), reason, time, _:LOCK_TYPE_TEMPORARY);
    }
    mysql_tquery(SQL, query);

    // Notify players
    new string[144];
    if(strcmp(locktype, "perm", true) == 0)
    {
        format(string, sizeof(string), "Dali ste permanentni lock karakteru %s. Razlog: %s", 
            ReturnPlayerName(targetid), reason);
        notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

        format(string, sizeof(string), "Staff %s vam je dao permanentni lock. Razlog: %s", 
            ReturnPlayerName(playerid), reason);
        notification.Show(targetid, "INFO", string, "!", BOXCOLOR_RED);
    }
    else
    {
        format(string, sizeof(string), "Dali ste lock karakteru %s na %d sati. Razlog: %s", 
            ReturnPlayerName(targetid), time, reason);
        notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

        format(string, sizeof(string), "Staff %s vam je dao lock na %d sati. Razlog: %s", 
            ReturnPlayerName(playerid), time, reason);
        notification.Show(targetid, "INFO", string, "!", BOXCOLOR_RED);
    }

    // Log the action
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je dao %s lock karakteru %s. Razlog: %s", 
        ReturnPlayerName(playerid), locktype, ReturnPlayerName(targetid), reason);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    // Kick the player
    SetTimerEx("delayedKick", 500, false, "d", targetid);

    return 1;
}

// Unlock account command
YCMD:unlockacc(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Otkljucava karakter igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new targetid;
    if(sscanf(params, "u", targetid))
        return notification.Show(playerid, "KORISCENJE", "/unlockacc [ID/Ime]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    // Update database
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "UPDATE character_locks SET active = 0 \
        WHERE character_id = %d AND active = 1", 
        GetCharacterSQLID(targetid));
    mysql_tquery(SQL, query);

    // Notify players
    new string[128];
    format(string, sizeof(string), "Uklonili ste lock karakteru %s", ReturnPlayerName(targetid));
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je uklonio lock", ReturnPlayerName(playerid));
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_GREEN);

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je uklonio lock karakteru %s", 
        ReturnPlayerName(playerid), ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Offline lock account command
YCMD:offlinelockacc(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Zakljucava karakter offline igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new character_name[MAX_PLAYER_NAME], locktype[8], time, reason[64];
    if(sscanf(params, "s[24]s[8]I(-1)s[64]", character_name, locktype, time, reason))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /offlinelockacc [Ime_Prezime] [tip] [vreme] [razlog]");
        SendClientMessage(playerid, x_server, "TIPOVI: perm, temp");
        SendClientMessage(playerid, x_server, "VREME: Za temp lock, broj sati (1-720)");
        return 1;
    }

    if(strcmp(locktype, "perm", true) != 0 && strcmp(locktype, "temp", true) != 0)
        return notification.Show(playerid, "GRESKA", "Nevazeci tip! (perm/temp)", "!", BOXCOLOR_RED);

    if(strcmp(locktype, "temp", true) == 0)
    {
        if(time < 1 || time > 720)
            return notification.Show(playerid, "GRESKA", "Vreme mora biti izmedju 1-720 sati!", "!", BOXCOLOR_RED);
    }

    // Get character ID from name
    new query[256];
    mysql_format(SQL, query, sizeof(query), "SELECT ID FROM characters WHERE Name = '%e' LIMIT 1", character_name);
    mysql_tquery(SQL, query, "OnOfflineLockCheck", "dsds", playerid, character_name, locktype, time, reason);

    return 1;
}

// Callback for offline lock
forward OnOfflineLockCheck(playerid, character_name[], locktype[], time, reason[]);
public OnOfflineLockCheck(playerid, character_name[], locktype[], time, reason[])
{
    if(!cache_num_rows())
        return notification.Show(playerid, "GRESKA", "Karakter nije pronadjen!", "!", BOXCOLOR_RED);

    new character_id;
    cache_get_value_name_int(0, "ID", character_id);

    // Insert into database
    new query[512];
    if(strcmp(locktype, "perm", true) == 0)
    {
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO character_locks (character_id, admin_id, reason, lock_expire, lock_type) \
            VALUES (%d, %d, '%e', NULL, %d)", 
            character_id, GetCharacterSQLID(playerid), reason, _:LOCK_TYPE_PERMANENT);
    }
    else
    {
        mysql_format(SQL, query, sizeof(query), 
            "INSERT INTO character_locks (character_id, admin_id, reason, lock_expire, lock_type) \
            VALUES (%d, %d, '%e', DATE_ADD(NOW(), INTERVAL %d HOUR), %d)", 
            character_id, GetCharacterSQLID(playerid), reason, time, _:LOCK_TYPE_TEMPORARY);
    }
    mysql_tquery(SQL, query);

    // Notify staff
    new string[144];
    if(strcmp(locktype, "perm", true) == 0)
    {
        format(string, sizeof(string), "Dali ste permanentni lock karakteru %s. Razlog: %s", 
            character_name, reason);
    }
    else
    {
        format(string, sizeof(string), "Dali ste lock karakteru %s na %d sati. Razlog: %s", 
            character_name, time, reason);
    }
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Log the action
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je dao %s offline lock karakteru %s. Razlog: %s", 
        ReturnPlayerName(playerid), locktype, character_name, reason);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for shorter command
YCMD:getcar(playerid, params[], help) = getvehicle;
YCMD:getv(playerid, params[], help) = getvehicle;
YCMD:getvehicle(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Teleportuje vozilo do vas", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new vehicleid;
    if(sscanf(params, "i", vehicleid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/getvehicle [ID vozila]");

    if(vehicleid < 1 || vehicleid > MAX_VEHICLES || !IsValidVehicle(vehicleid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Nevazeci ID vozila!");

    // Get admin's position
    new Float:x, Float:y, Float:z, Float:a;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerFacingAngle(playerid, a);
    
    // Offset the vehicle slightly in front of the admin
    x += (3.0 * floatsin(-a, degrees));
    y += (3.0 * floatcos(-a, degrees));

    // Set vehicle position
    SetVehiclePos(vehicleid, x, y, z);
    SetVehicleZAngle(vehicleid, a);
    
    // Optional: Fix and repair the vehicle
    RepairVehicle(vehicleid);
    SetVehicleHealth(vehicleid, 1000.0);

    // Notify admin
    new string[128];
    format(string, sizeof(string), "maryland \187; "c_white"Teleportovali ste vozilo ID: %d do vas.", vehicleid);
    SendClientMessage(playerid, x_server, string);

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je teleportovao vozilo ID: %d", 
        ReturnPlayerName(playerid), vehicleid);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

// Alias for shorter command
YCMD:ecar(playerid, params[], help) = entercar;
YCMD:entercar(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Ulazi u najblize slobodno mesto u vozilu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new vehicleid;
    if(sscanf(params, "i", vehicleid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/entercar [ID vozila]");

    if(vehicleid < 1 || vehicleid > MAX_VEHICLES || !IsValidVehicle(vehicleid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Nevazeci ID vozila!");

    // Check if player is already in a vehicle
    if(IsPlayerInAnyVehicle(playerid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Vec ste u vozilu!");

    // Try to find an empty seat
    new seatid = -1;
    
    // Check all seats by looking for players in them
    new bool:seats[4];
    foreach(new i : Player)
    {
        if(IsPlayerInVehicle(i, vehicleid))
        {
            new currentseat = GetPlayerVehicleSeat(i);
            if(currentseat >= 0 && currentseat < 4)
            {
                seats[currentseat] = true;
            }
        }
    }

    // Find first empty seat
    for(new i = 0; i < 4; i++)
    {
        if(!seats[i])
        {
            seatid = i;
            break;
        }
    }

    // If no empty seat found, kick a passenger and take their seat
    if(seatid == -1)
    {
        // Find first passenger (not driver) and kick them
        foreach(new i : Player)
        {
            if(IsPlayerInVehicle(i, vehicleid))
            {
                new pseat = GetPlayerVehicleSeat(i);
                if(pseat > 0) // Don't kick driver
                {
                    RemovePlayerFromVehicle(i);
                    SendClientMessage(i, x_server, "maryland \187; "c_white"Staff vas je izbacio iz vozila.");
                    seatid = pseat;
                    break;
                }
            }
        }
    }

    // If still no seat (only driver in car), notify admin
    if(seatid == -1)
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Ne mozete izbaciti vozaca!");

    // Put admin in the vehicle
    PutPlayerInVehicle(playerid, vehicleid, seatid);

    // Notify admin
    new string[128];
    format(string, sizeof(string), "maryland \187; "c_white"Usli ste u vozilo ID: %d (Sediste: %d)", vehicleid, seatid);
    SendClientMessage(playerid, x_server, string);

    // Log the action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je usao u vozilo ID: %d (Sediste: %d)", 
        ReturnPlayerName(playerid), vehicleid, seatid);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

stock IsFactionChatEnabled() {

    return globalSettings[FACTION_CHAT];
}

stock IsVIPChatEnabled() {

    return globalSettings[VIP_CHAT];
}

stock IsStaffChatEnabled() {

    return globalSettings[STAFF_CHAT];
}

stock IsLeaderChatEnabled() {

    return globalSettings[LEADER_CHAT];
}

stock IsPlayerMuted(playerid) {

    if(PlayerMute[playerid][muteTime] > 0)
        return (true);

    return (false);
}

// Unmute command
YCMD:unmute(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Skida mute igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return SendServerMessage(playerid, "Niste u mogucnosti koristiti ovu komandu!");

    new targetid;
    if(sscanf(params, "u", targetid))
        return SendServerMessage(playerid, "/unmute <ID/Ime>");

    if(targetid == INVALID_PLAYER_ID)
        return SendServerMessage(playerid, "Doslo je do greske, prijavite administraciji!");

    if(!IsPlayerConnected(targetid))
        return SendServerMessage(playerid, "Taj igrac nije konektovan na server.");

    if(!IsPlayerMuted(targetid))
        return SendServerMessage(playerid, "Taj igrac nije utisan!");

    // Clear mute data
    PlayerMute[targetid][muteTime] = 0;
    PlayerMute[targetid][mutedBy][0] = EOS;
    
    // Kill timer if exists
    if(Timer_UpdatePlayerMute[targetid] != 0)
    {
        KillTimer(Timer_UpdatePlayerMute[targetid]);
        Timer_UpdatePlayerMute[targetid] = 0;
    }

    // Update database
    new q[128];
    mysql_format(SQL, q, sizeof q, "UPDATE `player_mutes` SET active = 0 WHERE character_id = %d AND active = 1",
        GetCharacterSQLID(targetid));
    mysql_tquery(SQL, q);

    // Notifications
    SendServerMessage(targetid, "Staff %s[%d] vam je skinuo mute!", ReturnCharacterName(playerid), playerid);
    SendServerMessage(playerid, "Uspjesno ste skinuli mute igracu %s[%d]!", ReturnCharacterName(targetid), targetid);

    foreach (new i: Player)
        if (PlayerInfo[i][Staff] && IsStaffChatEnabled())
            SendClientMessage(i, x_purple, "#UNMUTE: "c_white"Staff %s[%d] je skinuo mute igracu %s[%d]!", 
                ReturnCharacterName(playerid), playerid, ReturnCharacterName(targetid), targetid);

    return 1;
}

// Offline mute command
YCMD:offlinemute(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Mutira offline igraca", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return SendServerMessage(playerid, "Niste u mogucnosti koristiti ovu komandu!");

    new character_name[MAX_PLAYER_NAME], minutes;
    if(sscanf(params, "s[24]d", character_name, minutes))
        return SendServerMessage(playerid, "/offlinemute <Ime_Prezime> <Minuti>");

    if(minutes <= 0 || minutes > 300)
        return SendServerMessage(playerid, "Minute ne mogu biti manje od 1 ili vece od 300.");

    // Check if player is online
    foreach(new i : Player)
    {
        if(!strcmp(ReturnCharacterName(i), character_name, true))
            return SendServerMessage(playerid, "Taj igrac je online! Koristite /mute.");
    }

    // Get character ID and check if exists
    new query[256];
    mysql_format(SQL, query, sizeof query, "SELECT ID FROM characters WHERE Name = '%e' LIMIT 1", character_name);
    mysql_tquery(SQL, query, "OnOfflineMuteCheck", "dsd", playerid, character_name, minutes);

    return 1;
}

// Callback for offline mute
forward OnOfflineMuteCheck(playerid, character_name[], minutes);
public OnOfflineMuteCheck(playerid, character_name[], minutes)
{
    if(!cache_num_rows())
        return SendServerMessage(playerid, "Taj karakter ne postoji!");

    new character_id;
    cache_get_value_name_int(0, "ID", character_id);

    // Insert mute into database
    new query[512];
    mysql_format(SQL, query, sizeof query, 
        "INSERT INTO `player_mutes` (`character_id`, `muteTime`, `mutedBy`, `muteDate`) \
        VALUES ('%d', '%d', '%e', NOW())",
        character_id, minutes, ReturnCharacterName(playerid));
    mysql_tquery(SQL, query);

    // Notify staff
    foreach (new i: Player)
        if (PlayerInfo[i][Staff] && IsStaffChatEnabled())
            SendClientMessage(i, x_purple, "#OFFMUTE: "c_white"Staff %s je offline mutirao igraca %s na %d minuta!", 
                ReturnCharacterName(playerid), character_name, minutes);

    SendServerMessage(playerid, "Uspjesno ste offline mutirali %s na %d minuta!", character_name, minutes);

    // Log action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je offline mutirao igraca %s na %d minuta", 
        ReturnCharacterName(playerid), character_name, minutes);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:count(playerid, params[], help) 
{

    if(GetPlayerStaffLevel(playerid) < 2)
        return SendServerMessage(playerid, "Niste u mogucnosti koristiti ovu komandu!");
    
    if(gCountTime != 0)
        return (true);

    new count;

    if(sscanf(params, "d", count))
        return SendServerMessage(playerid, "/count <sekundi>");

    if(count < 1 || count > 10 )
        return SendServerMessage(playerid, "Count ne moze biti manji od 1 a veci od 10!");

    SetTimer("Count_UpdateTime", 1000, true);
    GameTextForAll("~g~%d", 1000, 3);
    gCountTime = count;

    return 1;
}

forward Count_UpdateTime();
public Count_UpdateTime() {

    if(gCountTime >= 0) {

        gCountTime--;
    }
}

// Change email command
// Helper function to validate email format
stock bool:IsValidEmail(const email[])
{
    new len = strlen(email);
    
    // Check minimum length and @ symbol
    if(len < 5 || strfind(email, "@", true) == -1)
        return false;
        
    // Check for @ and . after @
    new atPos = strfind(email, "@", true);
    if(atPos == -1 || atPos == 0 || atPos == len-1)
        return false;
        
    // Check for . after @
    new dotPos = strfind(email, ".", true, atPos);
    if(dotPos == -1 || dotPos == atPos+1 || dotPos == len-1)
        return false;
        
    return true;
}


YCMD:changeemail(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Menja email igracu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new targetid, email[128];
    if(sscanf(params, "us[128]", targetid, email))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /setemail [ID/Ime] [novi_email]");
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    // Validate email format
    if(!IsValidEmail(email))
        return notification.Show(playerid, "GRESKA", "Nevazeci format email adrese!", "!", BOXCOLOR_RED);

    // Update email in database
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "UPDATE accounts SET Email = '%e' WHERE ID = %d",
        email, PlayerInfo[targetid][SQLID]);
    mysql_tquery(SQL, query);

    // Update player's email in memory
    format(PlayerInfo[targetid][Email], 128, "%s", email);

    // Notify players
    new string[144];
    format(string, sizeof(string), "Promenili ste email igracu %s na: %s", 
        ReturnPlayerName(targetid), email);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je promenio email na: %s", 
        ReturnPlayerName(playerid), email);
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_GREEN);

    // Log the action
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je promenio email igracu %s na: %s", 
        ReturnPlayerName(playerid), ReturnPlayerName(targetid), email);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:apu(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Stavlja igraca u vozilo kao putnika", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "GRESKA", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new targetid, vehicleid;
    if(sscanf(params, "ui", targetid, vehicleid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/apu [ID/Ime] [ID vozila]");

    if(targetid == INVALID_PLAYER_ID)
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Taj igrac nije na serveru!");

    if(!IsValidVehicle(vehicleid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Nevazeci ID vozila!");

    if(IsPlayerInAnyVehicle(targetid))
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Igrac je vec u vozilu!");

    // Try to find an empty passenger seat (1-3)
    new seatid = -1;
    
    // Check all passenger seats
    new bool:seats[4];
    foreach(new i : Player)
    {
        if(IsPlayerInVehicle(i, vehicleid))
        {
            new currentseat = GetPlayerVehicleSeat(i);
            if(currentseat >= 0 && currentseat < 4)
            {
                seats[currentseat] = true;
            }
        }
    }

    // Find first empty passenger seat (1-3)
    for(new i = 1; i < 4; i++)
    {
        if(!seats[i])
        {
            seatid = i;
            break;
        }
    }

    // If no empty passenger seat found, kick a passenger and take their seat
    if(seatid == -1)
    {
        // Find first passenger and kick them
        foreach(new i : Player)
        {
            if(IsPlayerInVehicle(i, vehicleid))
            {
                new pseat = GetPlayerVehicleSeat(i);
                if(pseat > 0) // Don't kick driver
                {
                    RemovePlayerFromVehicle(i);
                    SendClientMessage(i, x_server, "maryland \187; "c_white"Staff vas je izbacio iz vozila.");
                    seatid = pseat;
                    break;
                }
            }
        }
    }

    // If still no seat available, return error
    if(seatid == -1)
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"Nema slobodnih putnickih mesta u vozilu!");

    // Put player in vehicle
    PutPlayerInVehicle(targetid, vehicleid, seatid);

    // Notify players
    SendClientMessage(playerid, x_server, "maryland \187; "c_white"Stavili ste igraca %s u vozilo ID: %d (Sediste: %d)", 
        ReturnPlayerName(targetid), vehicleid, seatid);
    SendClientMessage(targetid, x_server, "maryland \187; "c_white"Staff %s vas je stavio u vozilo", 
        ReturnPlayerName(playerid));

    // Log action
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je stavio igraca %s u vozilo ID: %d (Sediste: %d)", 
        ReturnPlayerName(playerid), ReturnPlayerName(targetid), vehicleid, seatid);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

YCMD:changename(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Menja ime karakteru", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new targetid, newname[MAX_PLAYER_NAME];
    if(sscanf(params, "us[24]", targetid, newname))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /changename [ID/Ime] [novo_ime]");
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    // Provera da li ime ve? postoji
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT character_id FROM characters WHERE cName = '%e' AND character_id != %d LIMIT 1",
        newname, GetCharacterSQLID(targetid));
    mysql_tquery(SQL, query, "OnNameChangeCheck", "dds", playerid, targetid, newname);

    return 1;
}

forward OnNameChangeCheck(playerid, targetid, newname[]);
public OnNameChangeCheck(playerid, targetid, newname[])
{
    if(cache_num_rows() > 0)
    {
        notification.Show(playerid, "GRESKA", "To ime je vec zauzeto!", "!", BOXCOLOR_RED);
        return 1;
    }

    // Sa?uvaj staro ime za log
    new oldname[MAX_PLAYER_NAME];
    format(oldname, sizeof(oldname), "%s", ReturnCharacterName(targetid));

    // Update ime u bazi
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "UPDATE characters SET cName = '%e' WHERE character_id = %d",
        newname, GetCharacterSQLID(targetid));
    mysql_tquery(SQL, query);

    // Update ime u memoriji
    SetPlayerName(targetid, newname);
    format(CharacterInfo[targetid][Name], MAX_PLAYER_NAME, "%s", newname);

    // Notify igra?e
    new string[144];
    format(string, sizeof(string), "Promenili ste ime igracu %s u: %s", 
        oldname, newname);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je promenio ime u: %s", 
        ReturnCharacterName(playerid), newname);
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_GREEN);

    // Log akcije
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je promenio ime igracu %s u: %s", 
        ReturnCharacterName(playerid), oldname, newname);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    // Obavesti ostale staffove
    foreach(new i : Player)
    {
        if(PlayerInfo[i][Staff] && IsStaffChatEnabled())
        {
            SendClientMessage(i, x_purple, "#CHANGENAME: "c_white"Staff %s je promenio ime igracu %s u: %s", 
            ReturnCharacterName(playerid), oldname, newname);
        }
    }

    return 1;
}

YCMD:changeusername(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Menja username naloga", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new targetid, newusername[MAX_PLAYER_NAME];
    if(sscanf(params, "us[24]", targetid, newusername))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /changeusername [ID/Ime] [novi_username]");
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    // Provera da li username ve? postoji
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT ID FROM accounts WHERE Username = '%e' AND ID != %d LIMIT 1",
        newusername, GetPlayerSQLID(targetid));
    mysql_tquery(SQL, query, "OnUsernameChangeCheck", "dds", playerid, targetid, newusername);

    return 1;
}

forward OnUsernameChangeCheck(playerid, targetid, newusername[]);
public OnUsernameChangeCheck(playerid, targetid, newusername[])
{
    if(cache_num_rows() > 0)
    {
        notification.Show(playerid, "GRESKA", "Taj username je vec zauzet!", "!", BOXCOLOR_RED);
        return 1;
    }

    // Sa?uvaj stari username za log
    new oldusername[MAX_PLAYER_NAME];
    format(oldusername, sizeof(oldusername), "%s", PlayerInfo[targetid][Username]);

    // Update username u bazi
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "UPDATE accounts SET Username = '%e' WHERE ID = %d",
        newusername, GetPlayerSQLID(targetid));
    mysql_tquery(SQL, query);

    // Update username u memoriji
    format(PlayerInfo[targetid][Username], MAX_PLAYER_NAME, "%s", newusername);

    // Notify igra?e
    new string[144];
    format(string, sizeof(string), "Promenili ste username igracu %s u: %s", 
        oldusername, newusername);
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je promenio username u: %s", 
        ReturnCharacterName(playerid), newusername);
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_GREEN);

    // Log akcije
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je promenio username igracu %s u: %s", 
        ReturnCharacterName(playerid), oldusername, newusername);
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    // Obavesti ostale staffove
    foreach(new i : Player)
    {
        if(PlayerInfo[i][Staff] && IsStaffChatEnabled())
        {
            SendClientMessage(i, x_purple, "#CHANGEUSERNAME: "c_white"Staff %s je promenio username igracu %s u: %s", 
                ReturnCharacterName(playerid), oldusername, newusername);
        }
    }

    return 1;
}

// Specijalni rankovi
enum
{
    RANK_NONE = 0,
    RANK_DEVELOPER,
    RANK_MAPPER,
    RANK_HEAD_STAFF,
    RANK_HEAD_LEADERS,
    RANK_HEAD_PROMOTERS,
    RANK_HEAD_ASSOCIATE
}

// Funkcija za auriranje staff taga
stock UpdateStaffTag(playerid)
{
    if(!IsPlayerConnected(playerid) || !PlayerInfo[playerid][Staff])
        return 0;

    if(!PlayerInfo[playerid][TagEnabled])
    {
        SetPlayerChatBubble(playerid, " ", 0xFFFFFFFF, 100.0, 1); // Prazan bubble da obrie postoje?i
        return 1;
    }

    new tagText[32];
    
    // Prvo proveri specijalni rank
    switch(PlayerInfo[playerid][SpecialRank])
    {
        case RANK_DEVELOPER: format(tagText, sizeof(tagText), "Developer");
        case RANK_MAPPER: format(tagText, sizeof(tagText), "Mapper");
        case RANK_HEAD_STAFF: format(tagText, sizeof(tagText), "Head of Staff");
        case RANK_HEAD_LEADERS: format(tagText, sizeof(tagText), "Head of Leaders");
        case RANK_HEAD_PROMOTERS: format(tagText, sizeof(tagText), "Head of Promoters");
        case RANK_HEAD_ASSOCIATE: format(tagText, sizeof(tagText), "Head of Associate");
        default: // Ako nema specijalni rank, koristi staff level
        {
            switch(GetPlayerStaffLevel(playerid))
            {
                case 1: format(tagText, sizeof(tagText), "Associate");
                case 2: format(tagText, sizeof(tagText), "Staff");
                case 3: format(tagText, sizeof(tagText), "Community Manager");
                case 4: format(tagText, sizeof(tagText), "Owner");
            }
        }
    }

    // Postavi chat bubble sa neograni?enim vremenom (0x7FFFFFFF)
    SetPlayerChatBubble(playerid, tagText, 0xFFFFFFFF, 100.0, 0x7FFFFFFF);
    
    return 1;
}

// Komanda za postavljanje specijalnog ranka
YCMD:setspecialrank(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Postavlja specijalni rank staffu", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < 4) // Samo owner moe postavljati
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new targetid, rankid;
    if(sscanf(params, "ud", targetid, rankid))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /setspecialrank [ID/Ime] [Rank ID]");
        SendClientMessage(playerid, x_server, "Rankovi: 0: None, 1: Developer, 2: Mapper, 3: Head Staff");
        SendClientMessage(playerid, x_server, "4: Head Leaders, 5: Head Promoters, 6: Head Associate");
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(rankid < 0 || rankid > 6)
        return notification.Show(playerid, "GRESKA", "Nevazeci ID ranka!", "!", BOXCOLOR_RED);

    PlayerInfo[targetid][SpecialRank] = rankid;
    UpdateStaffTag(targetid);

    new string[128];
    format(string, sizeof(string), "Postavili ste specijalni rank %d igracu %s", 
        rankid, ReturnPlayerName(targetid));
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    // Sa?uvaj u bazi
    new query[128];
    mysql_format(SQL, query, sizeof(query), 
        "UPDATE accounts SET SpecialRank = %d WHERE ID = %d",
        rankid, GetPlayerSQLID(targetid));
    mysql_tquery(SQL, query);

    return 1;
}

// Komanda za toggle staff taga
YCMD:togtag(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Ukljucuje/iskljucuje staff tag", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(!PlayerInfo[playerid][Staff])
        return notification.Show(playerid, "GRESKA", "Niste staff!", "!", BOXCOLOR_RED);

    PlayerInfo[playerid][TagEnabled] = !PlayerInfo[playerid][TagEnabled];
    UpdateStaffTag(playerid);

    new string[64];
    format(string, sizeof(string), "Staff tag %s", PlayerInfo[playerid][TagEnabled] ? "ukljucen" : "iskljucen");
    notification.Show(playerid, "INFO", string, "!", BOXCOLOR_GREEN);

    return 1;
}

// Dodaj u OnPlayerConnect
hook OnPlayerConnect(playerid)
{
    // ... postoje?i kod ...
    PlayerInfo[playerid][SpecialRank] = RANK_NONE;
    PlayerInfo[playerid][TagEnabled] = true;
    UpdateStaffTag(playerid); // Postavi inicijalni tag
    return 1;
}


// Dodaj u OnPlayerSpawn
hook OnPlayerSpawn(playerid)
{
    // ... postoje?i kod ...
    if(PlayerInfo[playerid][Staff])
        UpdateStaffTag(playerid); // Osvezi tag pri spawnu
    return 1;
}

// Callback za u?itavanje ranka
forward OnSpecialRankLoad(playerid);
public OnSpecialRankLoad(playerid)
{
    if(cache_num_rows() > 0)
    {
        cache_get_value_name_int(0, "SpecialRank", PlayerInfo[playerid][SpecialRank]);
        if(PlayerInfo[playerid][Staff]) 
            UpdateStaffTag(playerid);
    }
    return 1;
}

YCMD:promenipol(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Menja pol karakteru", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_HEAD_MANAGER)
        return notification.Show(playerid, "GRESKA", "Niste ovlasceni!", "!", BOXCOLOR_RED);

    new targetid, gender;
    if(sscanf(params, "ud", targetid, gender))
    {
        SendClientMessage(playerid, x_server, "KORISCENJE: /changegender [ID/Ime] [Pol (0-Musko, 1-Zensko)]");
        return 1;
    }

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    if(gender < 0 || gender > 1)
        return notification.Show(playerid, "GRESKA", "Nevazeci pol! (0-Musko, 1-Zensko)", "!", BOXCOLOR_RED);

    // Sa?uvaj stari pol za log
    new oldGender = _:CharacterInfo[targetid][Gender];

    // Update pol u bazi
    new query[128];
    mysql_format(SQL, query, sizeof(query), 
        "UPDATE characters SET cGender = %d WHERE character_id = %d",
        gender, GetCharacterSQLID(targetid));
    mysql_tquery(SQL, query);

    // Update pol u memoriji
    CharacterInfo[targetid][Gender] = eGender:gender;

    // Notify igra?e
    new string[144];
    format(string, sizeof(string), "Promenili ste pol igracu %s u: %s", 
        ReturnCharacterName(targetid), gender ? "Zensko" : "Musko");
    notification.Show(playerid, "USPESNO", string, "!", BOXCOLOR_GREEN);

    format(string, sizeof(string), "Staff %s vam je promenio pol u: %s", 
        ReturnCharacterName(playerid), gender ? "Zensko" : "Musko");
    notification.Show(targetid, "INFO", string, "!", BOXCOLOR_GREEN);

    // Log akcije
    static log_str[256];
    format(log_str, sizeof log_str, "STAFF: %s je promenio pol igracu %s iz %s u %s", 
        ReturnCharacterName(playerid), ReturnCharacterName(targetid),
        oldGender ? "Zensko" : "Musko", gender ? "Zensko" : "Musko");
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    // Obavesti ostale staffove
    foreach(new i : Player)
    {
        if(PlayerInfo[i][Staff] && IsStaffChatEnabled())
        {
            SendClientMessage(i, x_purple, "#CHANGEGENDER: "c_white"Staff %s je promenio pol igracu %s iz %s u %s", 
                ReturnCharacterName(playerid), ReturnCharacterName(targetid),
                oldGender ? "Zensko" : "Musko", gender ? "Zensko" : "Musko");
        }
    }

    return 1;
}

YCMD:allias(playerid, params[], help)
{
    if(help)
    {
        notification.Show(playerid, "HELP", "Prikazuje sve accounte na istoj IP adresi", "+", BOXCOLOR_BLUE);
        return 1;
    }

    if(GetPlayerStaffLevel(playerid) < e_STAFF)
        return notification.Show(playerid, "Greska", "Samo staff lvl. 2+ moze ovo!", "!", BOXCOLOR_RED);

    new targetid;
    if(sscanf(params, "u", targetid))
        return notification.Show(playerid, "KORISCENJE", "/allias [ID/Ime]", "?", BOXCOLOR_BLUE);

    if(targetid == INVALID_PLAYER_ID)
        return notification.Show(playerid, "GRESKA", "Taj igrac nije na serveru!", "!", BOXCOLOR_RED);

    new ip[16];
    GetPlayerIp(targetid, ip, sizeof(ip));

    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "SELECT a.Username, c.cName, a.last_ip \
        FROM accounts a \
        LEFT JOIN characters c ON a.ID = c.account_id \
        WHERE a.last_ip = '%e' \
        ORDER BY a.Username ASC", ip);
    mysql_tquery(SQL, query, "onAlliasLoad", "dd", playerid, targetid);

    return 1;
}

forward onAlliasLoad(playerid, targetid);
public onAlliasLoad(playerid, targetid)
{
    new rows = cache_num_rows();
    if(!rows)
        return notification.Show(playerid, "INFO", "Nema drugih accounta na ovoj IP adresi!", "i", BOXCOLOR_BLUE);

    new string[1024], username[24], charname[MAX_PLAYER_NAME], ip[16];
    new title[64];

    GetPlayerIp(targetid, ip, sizeof(ip));
    format(title, sizeof(title), "Accounti na IP: %s (%d pronadjeno)", ip, rows);

    format(string, sizeof(string), "Username\tCharacter Name\n");
    
    for(new i = 0; i < rows; i++)
    {
        cache_get_value_name(i, "Username", username, sizeof(username));
        cache_get_value_name(i, "cName", charname, sizeof(charname));
        
        format(string, sizeof(string), "%s%s\t%s\n", 
            string, 
            username,
            (strlen(charname) > 0) ? charname : "Nema karaktera"
        );
    }

    Dialog_Show(playerid, "dialog_AlliasList", DIALOG_STYLE_TABLIST_HEADERS, title, string, "Zatvori", "");

    // Log akcije
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je proverio VPN listu za IP %s (%s)", 
        ReturnPlayerName(playerid), ip, ReturnPlayerName(targetid));
    mysql_write_log(log_str, LOG_TYPE_STAFF);

    return 1;
}

Dialog:dialog_AlliasList(playerid, response, listitem, inputtext[])
{
    return 1; // Dialog je samo za prikaz
}

// Stock funkcija za proveru
stock IsPlayerAdminFrozen(playerid) {
    return AdminFreeze[playerid];
}

YCMD:getvehvw(playerid, params[], help) {
    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new vehicleid;
    
    if(isnull(params)) {
        if(!IsPlayerInAnyVehicle(playerid))
            return SendClientMessage(playerid, x_red, "maryland // "c_white"Morate biti u vozilu ili navesti ID vozila!");
            
        vehicleid = GetPlayerVehicleID(playerid);
    }
    else {
        if(sscanf(params, "i", vehicleid))
            return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/getvehvw [ID vozila]");
            
        if(vehicleid < 1 || vehicleid > MAX_VEHICLES || !IsValidVehicle(vehicleid))
            return SendClientMessage(playerid, x_red, "maryland // "c_white"Navedeno vozilo ne postoji!");
    }
    
    new vw = GetVehicleVirtualWorld(vehicleid);
    SendClientMessage(playerid, x_server, "maryland \187; "c_white"Virtual World vozila (ID: %d) je: %d", vehicleid, vw);
    
    return 1;
}

YCMD:setvehvw(playerid, params[], help) {
    if(GetPlayerStaffLevel(playerid) < e_ASSISTANT)
        return notification.Show(playerid, "Greska", "Samo staff moze ovo!", "!", BOXCOLOR_RED);

    new vw, vehicleid;
    
    if(isnull(params)) {
        return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/setvehvw [Virtual World] [ID vozila (opcionalno)]");
    }
    
    if(strfind(params, " ") == -1) {
        // Samo VW je naveden, koristimo trenutno vozilo
        if(sscanf(params, "i", vw))
            return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/setvehvw [Virtual World] [ID vozila (opcionalno)]");
            
        if(!IsPlayerInAnyVehicle(playerid))
            return SendClientMessage(playerid, x_red, "maryland // "c_white"Morate biti u vozilu ili navesti ID vozila!");
            
        vehicleid = GetPlayerVehicleID(playerid);
    }
    else {
        // Navedeni su i VW i ID vozila
        if(sscanf(params, "ii", vw, vehicleid))
            return SendClientMessage(playerid, x_server, "maryland \187; "c_white"/setvehvw [Virtual World] [ID vozila (opcionalno)]");
            
        // Provera da li vozilo postoji
        if(vehicleid < 1 || vehicleid > MAX_VEHICLES || !IsValidVehicle(vehicleid))
            return SendClientMessage(playerid, x_red, "maryland // "c_white"Navedeno vozilo ne postoji!");
    }
    
    // Provera validnosti virtual world-a
    if(vw < 0)
        return SendClientMessage(playerid, x_red, "maryland // "c_white"Virtual World ne moze biti negativan broj!");
        
    SetVehicleVirtualWorld(vehicleid, vw);
    
    // Log za staff akcije
    static log_str[128];
    format(log_str, sizeof log_str, "STAFF: %s je postavio VW vozila ID: %d na %d", ReturnPlayerName(playerid), vehicleid, vw);
    mysql_write_log(log_str, LOG_TYPE_STAFF);
    
    SendClientMessage(playerid, x_server, "maryland \187; "c_white"Postavili ste Virtual World vozila (ID: %d) na: %d", vehicleid, vw);
    
    return 1;
}
