/***
 *
 *  ##     ##    ###    ########  ##    ## ##          ###    ##    ## ########  
 *  ###   ###   ## ##   ##     ##  ##  ##  ##         ## ##   ###   ## ##     ## 
 *  #### ####  ##   ##  ##     ##   ####   ##        ##   ##  ####  ## ##     ## 
 *  ## ### ## ##     ## ########     ##    ##       ##     ## ## ## ## ##     ## 
 *  ##     ## ######### ##   ##      ##    ##       ######### ##  #### ##     ## 
 *  ##     ## ##     ## ##    ##     ##    ##       ##     ## ##   ### ##     ## 
 *  ##     ## ##     ## ##     ##    ##    ######## ##     ## ##    ## ########   
 *
 *  @Author         Vostic & Nodi
 *  @Date           9th September 2023
 *  @Weburl         https://maryland-ogc.com
 *  @Project        maryland_project
 *
 *  @File           jobs.script
 *  @Module         jobs
 */


#include <ysilib\YSI_Coding\y_hooks>


const MAX_JOBS = 10;
const MAX_JOB_NAME_LEN = 32;

const MAX_JOB_VEHICLES = 50;

new 
    job_ID[MAX_JOBS],
    job_Name[MAX_JOBS][MAX_JOB_NAME_LEN],
    job_Salary[MAX_JOBS],
    job_Uniform[MAX_JOBS],

    Float:job_UnifromPos[MAX_JOBS][3],
    Float:job_Position[MAX_JOBS][3],

    job_Interior[MAX_JOBS],

    //*      VEHICLES 

    job_VehicleID[MAX_JOB_VEHICLES],
    job_VehicleModel[MAX_JOB_VEHICLES],
    job_VehicleColor[MAX_JOB_VEHICLES][2],
    
    Float:job_VehiclePosition[MAX_JOB_VEHICLES][4],

    job_Pickup[MAX_JOBS][2],
    Text3D:job_Label[MAX_JOBS][2],

    job_Created[MAX_JOBS];

stock Job_GetNextID() {

    for(new i = 0; i < MAX_JOBS; i++) {

        if(!job_Created[i]) return i;
    }

    return MAX_JOBS;
}

forward Job_LoadData();
public Job_LoadData() {

    new rows = cache_num_rows();
    if(!rows) return print("[SQL]: Nije moguce ucitati tabelu `jobs`");

    else {

        for(new i = 0; i < rows; i++) {

            cache_get_value_name_int(i, "ID", job_ID[i]);
            cache_get_value_name(i, "Name", job_Name[i], MAX_JOB_NAME_LEN);
            cache_get_value_name_int(i, "Salary", job_Salary[i]);
            cache_get_value_name_int(i, "Uniform", job_Uniform[i]);
            
            cache_get_value_name_float(i, "UniformX", job_UnifromPos[i][0]);
            cache_get_value_name_float(i, "UniformY", job_UnifromPos[i][1]);
            cache_get_value_name_float(i, "UniformZ", job_UnifromPos[i][2]);

            cache_get_value_name_float(i, "PositionX", job_Position[i][0]);
            cache_get_value_name_float(i, "PositionY", job_Position[i][1]);
            cache_get_value_name_float(i, "PositionZ", job_Position[i][2]);

            cache_get_value_name_int(i, "Interior", job_Interior[i]);

            new job_string[64], uniform_string[32];

            format(job_string, sizeof job_string, ""c_server"Posao » "c_white"%s\n"c_server"Za uzimanje posla "c_white"» 'N'", job_Name[i]);

            format(job_string, sizeof uniform_string, ""c_server"Uniforma » "c_white"%s\n"c_server"Za uzimanje uniforme "c_white"» 'N'", job_Name[i]);

            job_Pickup[i][0] = CreateDynamicPickup(1210, 1, job_Position[i][0], job_Position[i][1], job_Position[i][2], 0);
            job_Pickup[i][1] = CreateDynamicPickup(1275, 1, job_UnifromPos[i][0], job_UnifromPos[i][1], job_UnifromPos[i][2], job_Interior[i]);

            job_Label[i][0] = Create3DTextLabel(job_string, -1, job_Position[i][0], job_Position[i][1], job_Position[i][2], 3.5, 0, 0);
            job_Label[i][1] = Create3DTextLabel(uniform_string, -1, job_UnifromPos[i][0], job_UnifromPos[i][1], job_UnifromPos[i][2], 3.5, job_Interior[i], 0);

            job_Created[i] = 1;
        
            CallLocalFunction("Job_OnLoaded", "d", i);
        }
    }

    return (true);
}

forward Job_CreateData(id, playerid);
public Job_CreateData(id, playerid) {

    job_ID[id] = cache_insert_id();

    new job_string[64];
    format(job_string, sizeof job_string, ""c_server"Posao » "c_white"%s\n"c_server"Za uzimanje posla "c_white"» 'N'", job_Name[id]);

    job_Pickup[id][0] = CreateDynamicPickup(1210, 1, job_Position[id][0], job_Position[id][1], job_Position[id][2], 0);
    job_Label[id][0] = Create3DTextLabel(job_string, -1, job_Position[id][0], job_Position[id][1], job_Position[id][2], 3.5, 0, 0);

    va_SendClientMessage(playerid, x_server, "maryland » "c_white"Uspjesno ste kreirali posao » "c_server"(%s)", id);

    return 1;
}

hook OnGameModeInit() {

    mysql_tquery(SQL, "SELECT * FROM `job_vehicles`", "Job_LoadVehicleData");
    mysql_tquery(SQL, "SELECT * FROM `jobs`", "Job_LoadData");
    return (true);
}

forward Job_OnLoaded(id);
public Job_OnLoaded(id) {

    // ? FERID NOTE va_SendClientMessage(playerid, colour, "maryland » "c_white"Uspjesno ste kreirali posao » "c_server"(%s)", id);

    return (true); 
}

YCMD:createjob(playerid, params[], help) {

    if(!IsPlayerAdmin(playerid))
        return SendClientMessage(playerid, x_server, "maryland » "c_white"Niste registrovani kao RCON Admin");

    new name[MAX_JOB_NAME_LEN], uniform, salary;

    if(sscanf(params, "s[32]dd", name, salary, uniform))
        return SendClientMessage(playerid, x_server, "maryland » "c_white"/createjob [Name] [Salary] [Uniform]");

    if(strlen(name) < 4 || strlen(name) > MAX_JOB_NAME_LEN)
        return SendClientMessage(playerid, x_server, "maryland » "c_white"Ime ne moze biti manje od 4 a vece od 32 znaka!");

    new jobID = Job_GetNextID(), Float:pPos[3];

    GetPlayerPos(playerid, pPos[0], pPos[0], pPos[0]);

    job_Name[jobID] = name;
    job_Uniform[jobID] = uniform;
    job_Salary[jobID] = salary;

    job_Position[jobID][0] = pPos[0];
    job_Position[jobID][1] = pPos[1];
    job_Position[jobID][2] = pPos[2];

    new query[650];

    mysql_format(SQL, query, sizeof query, "INSERT INTO `jobs` (`Name`, `Salary`, `Uniform`, `UniformX`, `UniformY`, `UniformZ`, `PositionX`, `PositionY`, `PositionZ`, `Interior`) VALUES \
                                            ('%e', '%d', '%d', '0.00', '0.00', '0.00', '%f', '%f', '%f', '0')", 
                                            job_Name[jobID], job_Salary[jobID], 
                                            job_Uniform[jobID], job_Position[jobID][0],
                                            job_Position[jobID][1], job_Position[jobID][2]);
    mysql_tquery(SQL, query, "Job_CreateData", "dd", jobID, playerid);

    return 1;   
}
