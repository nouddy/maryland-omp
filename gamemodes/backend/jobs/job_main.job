/***
 *
 *  ##     ##    ###    ########  ##    ## ##          ###    ##    ## ########  
 *  ###   ###   ## ##   ##     ##  ##  ##  ##         ## ##   ###   ## ##     ## 
 *  #### ####  ##   ##  ##     ##   ####   ##        ##   ##  ####  ## ##     ## 
 *  ## ### ## ##     ## ########     ##    ##       ##     ## ## ## ## ##     ## 
 *  ##     ## ######### ##   ##      ##    ##       ######### ##  #### ##     ## 
 *  ##     ## ##     ## ##    ##     ##    ##       ##     ## ##   ### ##     ## 
 *  ##     ## ##     ## ##     ##    ##    ######## ##     ## ##    ## ########   
 *
 *  @Author         Vostic & Nodi
 *  @Date           9th September 2023
 *  @Weburl         https://maryland-ogc.com
 *  @Project        maryland_project
 *
 *  @File           jobs.script
 *  @Module         jobs
 */


#include <ysilib\YSI_Coding\y_hooks>


const MAX_JOBS = 10;
const MAX_JOB_NAME_LEN = 32;

const MAX_JOB_VEHICLES = 50;

static 
    job_ID[MAX_JOBS],
    job_Name[MAX_JOBS][MAX_JOB_NAME_LEN],
    job_Salary[MAX_JOBS],
    job_Uniform[MAX_JOBS],

    Float:job_UnifromPos[MAX_JOBS][3],
    Float:job_Position[MAX_JOBS][3],

    job_Interior[MAX_JOBS],

    //*      VEHICLES 

    job_VehicleID[MAX_JOB_VEHICLES],
    job_VehicleModel[MAX_JOB_VEHICLES],
    job_VehicleColor[MAX_JOB_VEHICLES][2],
    
    Float:job_VehiclePosition[MAX_JOB_VEHICLES][4],

    job_Pickup[MAX_JOBS][2],
    Text3D:job_Label[MAX_JOBS][2],

    job_Created[MAX_JOBS];

forward Job_LoadData();
public Job_LoadData() {

    new rows = cache_num_rows();
    if(!rows) return print("[SQL]: Nije moguce ucitati tabelu `jobs`");

    else {

        for(new i = 0; i < rows; i++) {

            cache_get_value_name_int(i, "ID", job_ID[i]);
            cache_get_value_name(i, "Name", job_Name[i], MAX_JOB_NAME_LEN);
            cache_get_value_name_int(i, "Salary", job_Salary[i]);
            cache_get_value_name_int(i, "Uniform", job_Uniform[i]);
            
            cache_get_value_name_float(i, "UniformX", job_UnifromPos[i][0]);
            cache_get_value_name_float(i, "UniformY", job_UnifromPos[i][1]);
            cache_get_value_name_float(i, "UniformZ", job_UnifromPos[i][2]);

            cache_get_value_name_float(i, "PositionX", job_Position[i][0]);
            cache_get_value_name_float(i, "PositionY", job_Position[i][1]);
            cache_get_value_name_float(i, "PositionZ", job_Position[i][2]);

            cache_get_value_name_int(i, "Interior", job_Interior[i]);

            new job_string[64], uniform_string[32];

            format(job_string, sizeof job_string, ""c_server"Posao » "c_white"%s\n"c_server"Za uzimanje posla "c_white"» 'N'", job_Name[i]);

            format(job_string, sizeof uniform_string, ""c_server"Uniforma » "c_white"%s\n"c_server"Za uzimanje uniforme "c_white"» 'N'", job_Name[i]);

            job_Pickup[i][0] = CreatePickup(1210, 1, job_Position[i][0], job_Position[i][1], job_Position[i][2], 0);
            job_Pickup[i][1] = CreatePickup(1275, 1, job_UnifromPos[i][0], job_UnifromPos[i][1], job_UnifromPos[i][2], job_Interior[i]);

            job_Label[i][0] = Create3DTextLabel(job_string, -1, job_Position[i][0], job_Position[i][1], job_Position[i][2], 3.5, 0, 0);
            job_Label[i][1] = Create3DTextLabel(uniform_string, -1, job_UnifromPos[i][0], job_UnifromPos[i][1], job_UnifromPos[i][2], 3.5, job_Interior[i], 0);

            job_Created[i] = 1;
        
            CallLocalFunction("Job_OnLoaded", "d", i);
        
        }
    }

    return (true);
}

hook OnGameModeInit() {

    mysql_tquery(SQL, "SELECT * FROM `job_vehicles`", "Job_LoadVehicleData");
    mysql_tquery(SQL, "SELECT * FROM `jobs`", "Job_LoadData");
    return (true);
}

forward Job_OnLoaded(id);
public Job_OnLoaded(id) {



    return (true); 
}
