/***
 *
 *  ##     ##    ###    ########  ##    ## ##          ###    ##    ## ########  
 *  ###   ###   ## ##   ##     ##  ##  ##  ##         ## ##   ###   ## ##     ## 
 *  #### ####  ##   ##  ##     ##   ####   ##        ##   ##  ####  ## ##     ## 
 *  ## ### ## ##     ## ########     ##    ##       ##     ## ## ## ## ##     ## 
 *  ##     ## ######### ##   ##      ##    ##       ######### ##  #### ##     ## 
 *  ##     ## ##     ## ##    ##     ##    ##       ##     ## ##   ### ##     ## 
 *  ##     ## ##     ## ##     ##    ##    ######## ##     ## ##    ## ########   
 *
 *  @Author         Vostic
 *  @Date           22th Dec 2024
 *  @Weburl         weburl
 *  @Project        maryland_project
 *
 *  @File           safezones.pwn
 *  @Module         modules
 */

#include <ysilib\YSI_Coding\y_hooks>

#define MAX_SAFEZONES 50
#define ZONE_COLOR 0x00FF0050

enum E_SAFEZONE_DATA {
    sz_ID,
    sz_Name[32],
    Float:sz_MinX,
    Float:sz_MinY,
    Float:sz_MaxX,
    Float:sz_MaxY,
    sz_Area,
    sz_GangZone
}

new Iterator:Safezones<MAX_SAFEZONES>;
new g_SafezoneData[MAX_SAFEZONES][E_SAFEZONE_DATA];
new bool:g_PlayerCreatingSZ[MAX_PLAYERS];
new Float:g_SZFirstPos[MAX_PLAYERS][2];


hook OnGameModeInit()
{
    print("misc/safezones.pwn loaded");
    mysql_tquery(SQL, "SELECT * FROM safezones", "LoadSafezones");
    return Y_HOOKS_CONTINUE_RETURN_1;
}

hook OnPlayerConnect(playerid)
{
    g_PlayerCreatingSZ[playerid] = false;
    
    // Prikazi sve postojece zone
    foreach(new i : Safezones)
    {
        GangZoneShowForPlayer(playerid, g_SafezoneData[i][sz_GangZone], ZONE_COLOR);
    }
    return Y_HOOKS_CONTINUE_RETURN_1;
}

forward LoadSafezones();
public LoadSafezones()
{
    new rows = cache_num_rows();
    if(!rows) 
    {
        print("No safezones loaded from database.");
        return 1;
    }
    
    new szid;
    for(new i = 0; i < rows; i++)
    {
        cache_get_value_name_int(i, "id", szid);
        
        cache_get_value_name(i, "name", g_SafezoneData[szid][sz_Name], 32);
        cache_get_value_name_float(i, "min_x", g_SafezoneData[szid][sz_MinX]);
        cache_get_value_name_float(i, "min_y", g_SafezoneData[szid][sz_MinY]);
        cache_get_value_name_float(i, "max_x", g_SafezoneData[szid][sz_MaxX]);
        cache_get_value_name_float(i, "max_y", g_SafezoneData[szid][sz_MaxY]);
        
        g_SafezoneData[szid][sz_ID] = szid;
        
        // Kreiraj area i zonu
        g_SafezoneData[szid][sz_Area] = CreateDynamicRectangle(
            g_SafezoneData[szid][sz_MinX],
            g_SafezoneData[szid][sz_MinY],
            g_SafezoneData[szid][sz_MaxX],
            g_SafezoneData[szid][sz_MaxY]
        );
        
        // Kreiranje zone 
        g_SafezoneData[szid][sz_GangZone] = GangZoneCreate(
            g_SafezoneData[szid][sz_MinX],
            g_SafezoneData[szid][sz_MinY],
            g_SafezoneData[szid][sz_MaxX],
            g_SafezoneData[szid][sz_MaxY]
        );
        GangZoneShowForAll(g_SafezoneData[szid][sz_GangZone], ZONE_COLOR);
        
        Iter_Add(Safezones, szid);
    }
    printf("Loaded %d safezones.", rows);
    return 1;
}

hook OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)
{
    if((newkeys & KEY_YES) && g_PlayerCreatingSZ[playerid]) // Y key
    {
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        
        if(g_SZFirstPos[playerid][0] == 0.0) // Prvi klik
        {
            g_SZFirstPos[playerid][0] = x;
            g_SZFirstPos[playerid][1] = y;
            SendClientMessage(playerid, x_green, "SAFE-ZONE: Prva pozicija postavljena. Idi do druge pozicije i pritisni Y.");
        }
        else // Drugi klik
        {
            Dialog_Show(playerid, "SAFEZONE_CREATE", DIALOG_STYLE_INPUT,
                "Kreiranje Safe Zone",
                "Unesi ime za safe zonu:",
                "Kreiraj", "Odustani"
            );
        }
    }
    if((newkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) // Attack keys
    {
        foreach(new i : Safezones)
        {
            if(IsPlayerInDynamicArea(playerid, g_SafezoneData[i][sz_Area]))
            {
                ApplyAnimation(playerid, !"PED", !"handscower",4.1,true,false,false,false,1000, SYNC_NONE);
                SendClientMessage(playerid, x_green, "SAFE-ZONE: Ne mozes napadati igrace u safe zoni!");
                return Y_HOOKS_BREAK_RETURN_1;
            }
        }
    }
    return Y_HOOKS_CONTINUE_RETURN_1;
}

Dialog:SAFEZONE_CREATE(playerid, response, listitem, inputtext[])
{
    if(!response) 
    {
        g_PlayerCreatingSZ[playerid] = false;
        g_SZFirstPos[playerid][0] = 0.0;
        g_SZFirstPos[playerid][1] = 0.0;
        return 1;
    }
    
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    
    new szid = Iter_Free(Safezones);
    if(szid == ITER_NONE) return SendClientMessage(playerid, x_green, "SAFE-ZONE: Dostignut maksimalan broj safe zona!");
    
    // Sortiraj koordinate
    new Float:min_x = floatmin(g_SZFirstPos[playerid][0], x);
    new Float:max_x = floatmax(g_SZFirstPos[playerid][0], x);
    new Float:min_y = floatmin(g_SZFirstPos[playerid][1], y);
    new Float:max_y = floatmax(g_SZFirstPos[playerid][1], y);
    
    new query[256];
    mysql_format(SQL, query, sizeof(query), 
        "INSERT INTO safezones (name, min_x, min_y, max_x, max_y) VALUES ('%e', %f, %f, %f, %f)",
        inputtext, min_x, min_y, max_x, max_y
    );
    mysql_tquery(SQL, query);
    
    g_SafezoneData[szid][sz_ID] = szid;
    format(g_SafezoneData[szid][sz_Name], 32, "%s", inputtext);
    g_SafezoneData[szid][sz_MinX] = min_x;
    g_SafezoneData[szid][sz_MinY] = min_y;
    g_SafezoneData[szid][sz_MaxX] = max_x;
    g_SafezoneData[szid][sz_MaxY] = max_y;
    
    g_SafezoneData[szid][sz_Area] = CreateDynamicRectangle(min_x, min_y, max_x, max_y);
    g_SafezoneData[szid][sz_GangZone] = GangZoneCreate(min_x, min_y, max_x, max_y);
    GangZoneShowForAll(g_SafezoneData[szid][sz_GangZone], ZONE_COLOR);
    
    Iter_Add(Safezones, szid);
    
    g_PlayerCreatingSZ[playerid] = false;
    g_SZFirstPos[playerid][0] = 0.0;
    g_SZFirstPos[playerid][1] = 0.0;
    
    SendClientMessage(playerid, x_green, "SAFE-ZONE: Safe zona uspešno kreirana!");
    return 1;
}

hook OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
    foreach(new i : Safezones)
    {
        if(IsPlayerInDynamicArea(playerid, g_SafezoneData[i][sz_Area]))
        {
            ApplyAnimation(playerid, !"PED", !"handscower",4.1,true,false,false,false,1000, SYNC_NONE);
            SendClientMessage(playerid, x_green, "SAFE-ZONE: Ne mozes napadati igrace u safe zoni!");
            return 0;
        }
    }
    return 1;
}

YCMD:createsz(playerid, params[], help)
{
    if(!IsPlayerAdmin(playerid)) return 0;
    
    g_PlayerCreatingSZ[playerid] = true;
    g_SZFirstPos[playerid][0] = 0.0;
    g_SZFirstPos[playerid][1] = 0.0;
    
    SendClientMessage(playerid, x_green, "SAFE-ZONE: Idi do prve pozicije i pritisni Y.");
    return 1;
}

YCMD:deletesz(playerid, params[], help)
{
    if(!IsPlayerAdmin(playerid)) return 0;
    
    new szid;
    if(sscanf(params, "d", szid)) return SendClientMessage(playerid, x_ltorange, "USAGE: /deletesz [id]");
    
    if(!Iter_Contains(Safezones, szid))
        return SendClientMessage(playerid, x_green, "SAFE-ZONE: Safe zona sa tim ID-em ne postoji!");
    
    new query[64];
    mysql_format(SQL, query, sizeof(query), "DELETE FROM safezones WHERE id = %d", szid);
    mysql_tquery(SQL, query);
    
    DestroyDynamicArea(g_SafezoneData[szid][sz_Area]);
    GangZoneDestroy(g_SafezoneData[szid][sz_GangZone]);
    
    Iter_Remove(Safezones, szid);
    
    SendClientMessage(playerid, x_green, "SAFE-ZONE: Safe zona uspešno obrisana!");
    return 1;
}

// Funkcija za pronalazenje najblize safe zone
stock GetNearestSafe(playerid)
{
    new Float:px, Float:py, Float:pz;
    GetPlayerPos(playerid, px, py, pz);
    
    new Float:closest_dist = 99999.9;
    new closest_sz = -1;
    
    foreach(new i : Safezones)
    {
        new Float:center_x = (g_SafezoneData[i][sz_MinX] + g_SafezoneData[i][sz_MaxX]) / 2;
        new Float:center_y = (g_SafezoneData[i][sz_MinY] + g_SafezoneData[i][sz_MaxY]) / 2;
        
        new Float:dist = floatsqroot(
            floatpower(center_x - px, 2.0) + 
            floatpower(center_y - py, 2.0)
        );
        
        if(dist < closest_dist)
        {
            closest_dist = dist;
            closest_sz = i;
        }
    }
    
    return closest_sz;
}

YCMD:szlist(playerid, params[], help)
{
    if(!IsPlayerAdmin(playerid)) return 0;
    
    new string[1024], count;
    strcat(string, "ID\tIme\tLokacija\n");
    
    foreach(new i : Safezones)
    {
        format(string, sizeof(string), "%s%d\t%s\t%.1f, %.1f\n",
            string,
            i,
            g_SafezoneData[i][sz_Name],
            (g_SafezoneData[i][sz_MinX] + g_SafezoneData[i][sz_MaxX]) / 2,
            (g_SafezoneData[i][sz_MinY] + g_SafezoneData[i][sz_MaxY]) / 2
        );
        count++;
    }
    
    if(!count) return SendClientMessage(playerid, x_green, "SAFE-ZONE: Nema kreiranih safe zona!");
    
    Dialog_Show(playerid, "DIALOG_SZLIST", DIALOG_STYLE_TABLIST_HEADERS,
        "Lista Safe Zona",
        string,
        "Zatvori", ""
    );
    return 1;
}

YCMD:nearsz(playerid, params[], help)
{
    new szid = GetNearestSafe(playerid);
    if(szid == -1) return SendClientMessage(playerid, x_green, "SAFE-ZONE: Nema safe zona u blizini!");
    
    new Float:px, Float:py, Float:pz;
    GetPlayerPos(playerid, px, py, pz);
    
    new Float:center_x = (g_SafezoneData[szid][sz_MinX] + g_SafezoneData[szid][sz_MaxX]) / 2;
    new Float:center_y = (g_SafezoneData[szid][sz_MinY] + g_SafezoneData[szid][sz_MaxY]) / 2;
    
    new Float:distance = floatsqroot(
        floatpower(center_x - px, 2.0) + 
        floatpower(center_y - py, 2.0)
    );
    
    new string[128];
    format(string, sizeof(string), "SAFE-ZONE: Najbliža safe zona: %s (ID: %d) - Udaljenost: %.2f metara", 
        g_SafezoneData[szid][sz_Name],
        szid,
        distance
    );
    SendClientMessage(playerid, x_green, string);
    
    // Opciono: Postavi checkpoint/marker do safe zone
    SetPlayerCheckpoint(playerid, center_x, center_y, pz, 3.0);
    
    return 1;
}
