/*
 *
 *  ##     ##    ###    ########  ##    ## ##          ###    ##    ## ########  
 *  ###   ###   ## ##   ##     ##  ##  ##  ##         ## ##   ###   ## ##     ## 
 *  #### ####  ##   ##  ##     ##   ####   ##        ##   ##  ####  ## ##     ## 
 *  ## ### ## ##     ## ########     ##    ##       ##     ## ## ## ## ##     ## 
 *  ##     ## ######### ##   ##      ##    ##       ######### ##  #### ##     ## 
 *  ##     ## ##     ## ##    ##     ##    ##       ##     ## ##   ### ##     ## 
 *  ##     ## ##     ## ##     ##    ##    ######## ##     ## ##    ## ########   
 *
 *  @Author         Nodi
 *  @Date           24th May 2023
 *  @Weburl         https://maryland-ogc.com
 *  @Project        maryland_project
 *
 *  @File           houses.script
 *  @Module         property
 */

//==================={Includes}=========================
#include <ysilib\YSI_Coding\y_hooks>
//======================================================

const   MAX_GARAGES     =   (300);

enum E_GARAGE_DATA {

    garageID,
    garageOwner,
    garagePrice,
    Float:garageEntrance[3],
    Float:garageExit[3],
    garageInterior,
    garageVW,
    garageWeed,
    garageMoney

}

new GarageData[MAX_GARAGES][E_GARAGE_DATA],
    Iterator:iter_Garages<MAX_GARAGES>,
    Text3D:GarageLabel[MAX_GARAGES],
    GaragePickup[MAX_GARAGES];

forward mysql_LoadGarages(); 
public mysql_LoadGarages() {

    new rows = cache_num_rows();
    if(!rows) return (true);

    for(new i = 0; i < rows; i++) {

        cache_get_value_name_int(i, "garage_id", GarageData[i][garageID]);
        cache_get_value_name_int(i, "garage_owner", GarageData[i][garageOwner]);
        cache_get_value_name_int(i, "garage_price", GarageData[i][garagePrice]);

        cache_get_value_name_float(i, "garage_enterX", GarageData[i][garageEntrance][0]);
        cache_get_value_name_float(i, "garage_enterY", GarageData[i][garageEntrance][1]);
        cache_get_value_name_float(i, "garage_enterZ", GarageData[i][garageEntrance][2]);

        cache_get_value_name_float(i, "garage_exitX", GarageData[i][garageExit][0]);
        cache_get_value_name_float(i, "garage_exitY", GarageData[i][garageExit][1]);
        cache_get_value_name_float(i, "garage_exitZ", GarageData[i][garageExit][2]);

        cache_get_value_name_int(i, "garage_interior", GarageData[i][garageInterior]);
        cache_get_value_name_int(i, "garage_vw", GarageData[i][garageVW]);
        cache_get_value_name_int(i, "garage_weed", GarageData[i][garageWeed]);
        cache_get_value_name_int(i, "garage_money", GarageData[i][garageMoney]);

        static tmp_label[678];

        if(GarageData[i][garageOwner] < 1) {

            format(tmp_label, sizeof tmp_label, "\
                                                "c_server" \187; "c_white"Garage [%d] "c_server"\171;\n\
                                                "c_server" \187; "c_white"Price : %.2f "c_server"\171; \n\
                                                "c_server" \187; "c_white"/buygarage "c_server"\171;", GarageData[i][garageID], GarageData[i][garagePrice]);

        }

        if(GarageData[i][garageOwner] >= 1) {

            format(tmp_label, sizeof tmp_label, "\
                                                "c_server" \187; "c_white"Garage [%d] "c_server"\171;\n\
                                                "c_server" \187; "c_white"Za ulaz pritisnite 'F' "c_server"\171; \n\
                                                ", GarageData[i][garageID]);
        }

        GarageLabel[i] = Create3DTextLabel(tmp_label, -1, GarageData[i][garageEntrance][0], GarageData[i][garageEntrance][1], GarageData[i][garageEntrance][2], 3.50, 0);
        GaragePickup[i] = CreatePickup(1318, 1, GarageData[i][garageEntrance][0], GarageData[i][garageEntrance][1], GarageData[i][garageEntrance][2]);

        Iter_Add(iter_Garages, i);

    }

    return (true);
}

hook OnGameModeInit() {

    mysql_tquery(SQL, "SELECT * FROM `garages`", "mysql_LoadGarages");

    return Y_HOOKS_CONTINUE_RETURN_1;
}


YCMD:creategarage(playerid, params[], help) {

    if(!IsPlayerAdmin(playerid))
        return SendServerMessage(playerid, "Samo RCON Admin moze ovo!");

    return (true);
}